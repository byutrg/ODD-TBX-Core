<?xml version="1.0" encoding="UTF-8"?>
<!-- <?oxygen RNGSchema="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tbxodd.rnc" type="compact"?>-->
<?oxygen RNGSchema="tei_odds.rnc" type="compact"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0"
    xmlns:sch="http://www.ascc.net/xml/schematron">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Systems to manage terminology, knowledge, and content - TermBase eXchange
                    (TBX)</title>

            </titleStmt>
            <publicationStmt>
                <publisher>LTAC Global</publisher>
                <date>October 29, 2008</date>
            </publicationStmt>
            <sourceDesc>
                <p>This is the Core Structure for TBX</p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <!-- annex D: Descriptions of the core structure and constraints (in RNG format) (this section includes all the data specifications in ODD declarations-->
            <div1>
                <head>Declarations</head>
                <schemaSpec ident="TBX" start="tbx" ns="">
                    <specGrpRef target="#spec-macros-entities"/>
                    <specGrpRef target="#spec-classes-atts"/>
                    <specGrpRef target="#spec-tbxinline"/>
                    <specGrpRef target="#spec-term-entries"/>
                    <specGrpRef target="#spec-other-elements"/>
                </schemaSpec>
                <specGrp xml:id="spec-tbxinline">
                    <elementSpec ident="hi">
                        <desc> Highlights a segment of text and optionally points to another
                            element.</desc>
                        <classes>
                            <memberOf key="target-IDREF"/>
                            <memberOf key="lang"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>
                        <attList>
                            <attDef ident="type">
                                <valList type="closed">
                                    <valItem ident="entailedTerm">
                                        <gloss>entailedTerm</gloss>
                                        <desc>A term, found in the content of a text element such as
                                                <tag>descrip type="definition"</tag>, that is
                                            defined in another terminological entry in the same
                                            terminological collection.</desc>
                                    </valItem>
                                    <valItem ident="hotkey">
                                        <gloss>hotkey</gloss>
                                        <desc>A key or a combination of keys on a computer keyboard
                                            that, when pressed at one time, performs a task (such as
                                            starting an application) as an alternative to using a
                                            mouse or other input device. Hotkeys are supported by
                                            many operating systems and applications (the hotkey is
                                            indicated by an ampersand in the term and by an
                                            underscore in the visual display). This type of
                                                <gi>hi</gi> element allows a hotkey to be identified
                                            as such in a text field such as a context sentence. To
                                            identify a hotkey for the head term of an entry, use the
                                                <val>lionHotkey</val> value of the <att>type</att>
                                            attribute on a <gi>termNote</gi>.</desc>
                                    </valItem>

                                    <valItem ident="italics">
                                        <gloss>italics</gloss>
                                        <desc>Indicates that the content enclosed in the <gi>hi</gi>
                                            element must be rendered in italics. </desc>
                                    </valItem>
                                    <valItem ident="bold">
                                        <gloss>bold</gloss>
                                        <desc>Indicates that the content enclosed in the <gi>hi</gi>
                                            element must be rendered in boldface. </desc>
                                    </valItem>
                                    <valItem ident="superscript">
                                        <gloss>superscript</gloss>
                                        <desc>Indicates that the content enclosed in the <gi>hi</gi>
                                            element must be rendered in superscript. </desc>
                                    </valItem>
                                    <valItem ident="subscript">
                                        <gloss>subscript</gloss>
                                        <desc>Indicates that the content enclosed in the <gi>hi</gi>
                                            element must be rendered in subscript.</desc>
                                    </valItem>
                                    <valItem ident="math">
                                        <gloss>math</gloss>
                                        <desc>Indicates that the content enclosed in the <gi>hi</gi>
                                            element is mathematical in nature.</desc>
                                    </valItem>
                                </valList>
                            </attDef>

                            <!-- removed per decision....
				<attDef ident="href">
					<datatype>
						<textNode/>
					</datatype>
				</attDef>
				<attDef ident="show">
					<datatype>
						<textNode/>
					</datatype>
				</attDef>
				<attDef ident="actuate">
					<datatype>
						<textNode/>
					</datatype>
				</attDef>
				<attDef ident="role">
					<datatype>
						<textNode/>
					</datatype>
				</attDef>
				<attDef ident="behavior">
					<datatype>
						<textNode/>
					</datatype>
				</attDef> -->
                        </attList>
                        <exemplum>
                            <eg><![CDATA[ <hi type="entailedTerm" target="id45">term</hi>]]></eg>
                        </exemplum>
                    </elementSpec>
                    <elementSpec ident="foreign">
                        <desc>Used to mark a segment of text that is in a different language from
                            the surrounding text.</desc>

                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                        <exemplum>
                            <eg><![CDATA[A <foreign xml:lang="fr">pomme</foreign> is an apple in French.]]></eg>
                        </exemplum>
                    </elementSpec>
                    <elementSpec ident="bpt">
                        <desc>The <gi>bpt</gi> tag encloses the beginning tag of a tag pair.</desc>
                        <content>
                            <textNode/>
                        </content>
                        <attList>
                            <attDef ident="i">
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                            <attDef ident="type">
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="ept">
                        <desc>The <gi>ept</gi> tag encloses the beginning tag of a tag pair.</desc>
                        <content>
                            <textNode/>
                        </content>
                        <attList>
                            <attDef ident="i">
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="ph">
                        <desc> Placeholder - Used to encapsulate markup codes that do not occur in
                            logical pairs with other codes. Examples include the XHTML
                                <tag>br/</tag> and <tag>hr/</tag> tags. This element should not be
                            used to encapsulate codes that occur in pairs (such as the XHTML
                                <tag>em</tag> and <tag>/em</tag> tags), which should instead be
                            encapuslated with <gi>bpt</gi> and <gi>ept</gi>.</desc>
                        <content>
                            <textNode/>
                        </content>
                        <attList>
                            <attDef ident="type">
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>
                    </elementSpec>
                </specGrp>

                <specGrp xml:id="spec-term-entries">
                    <!--Elements needed for terminological entries, in alphabetical order -->
                    <elementSpec ident="admin">
                        <desc>Contains information of an administrative nature for the node (parent
                            element) in question, such as the source of information, or the project
                            or client for which it applies. The type of administrative information
                            is indicated by the value of the <att>type</att> attribute. It can
                            appear alone, or, if additional information needs to be provided, such
                            as a note or a reference, it can be nested in an <gi>adminGrp</gi>
                            element. <desc>This element can occur at any of the three levels of the
                                terminological entry. Several types, however, logically should occur
                                at restricted levels, as indicated with the corresponding
                                data-category descriptions. For instance, <val>databaseType</val>
                                and <val>conceptOrigin</val> would typically occur at the
                                conceptEntry level. Care should be taken to insert the
                                    <gi>admin</gi> at the appropriate level of the entry according
                                to its type attribute value and the parent node to which the
                                administrative information applies.</desc></desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                        <constraintSpec ident="admin" scheme="schematron">
                            <constraint>
                                <sch:pattern name="admin_applicationSubset">
                                    <sch:rule context="admin[@type='applicationSubset']">
                                        <sch:assert test=".=not(*)">The application subset must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_businessUnitSubset">
                                    <sch:rule context="admin[@type='businessUnitSubset']">
                                        <sch:assert test=".=not(*)">The business unit subset must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_conceptOrigin">
                                    <sch:rule context="admin[@type='conceptOrigin']">
                                        <sch:assert test=".=not(*)">The concept origin must be expressed
                                            in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_customerSubset">
                                    <sch:rule context="admin[@type='customerSubset']">
                                        <sch:assert test=".=not(*)">The customer subset must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_databaseType">
                                    <sch:rule context="admin[@type='databaseType']">
                                        <sch:assert test=".=not(*)">The type of data base must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_domainExpert">
                                    <sch:rule context="admin[@type='domainExpert']">
                                        <sch:assert test=".=not(*)">The domain expert must be expressed
                                            in plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_elementWorkingStatus">
                                    <sch:rule context="admin[@type='elementWorkingStatus']">
                                        <sch:assert
                                            test=".='starterElement' or .='workingElement' or .='consolidatedElement' or .='archiveElement' or .='importedElement' or .='exportedElement'"
                                            > The element working status must be starterElement,
                                            workingElement, consolidatedElement, archiveElement,
                                            importedElement, or exportedElement.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_entrySource">
                                    <sch:rule context="admin[@type='entrySource']">
                                        <sch:assert test=".=not(*)">The source of the entry must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_environmentSubset">
                                    <sch:rule context="admin[@type='environmentSubset']">
                                        <sch:assert test=".=not(*)">The environment subset must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_indexHeading">
                                    <sch:rule context="admin[@type='indexHeading']">
                                        <sch:assert test=".=not(*)">The index heading must be expressed
                                            in plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_keyword">
                                    <sch:rule context="admin[@type='keyword']">
                                        <sch:assert test=".=not(*)">The keyword must be expressed in
                                            plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_originatingPerson">
                                    <sch:rule context="admin[@type='originatingPerson']">
                                        <sch:assert test=".=not(*)">The name of the originating person
                                            must be expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_originatingDatabase">
                                    <sch:rule context="admin[@type='originatingDatabase']">
                                        <sch:assert test=".=not(*)">The name of the originating database
                                            must be expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_originatingInstitution">
                                    <sch:rule context="admin[@type='originatingInstitution']">
                                        <sch:assert test=".=not(*)">The name of the originating
                                            institution must be expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_productSubset">
                                    <sch:rule context="admin[@type='productSubset']">
                                        <sch:assert test=".=not(*)">The product subset must be expressed
                                            in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_projectSubset">
                                    <sch:rule context="admin[@type='projectSubset']">
                                        <sch:assert test=".=not(*)">The project subset must be expressed
                                            in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_securitySubset">
                                    <sch:rule context="admin[@type='securitySubset']">
                                        <sch:assert test=".='public' or .='confidential'">The security
                                            subset must be public or confidential.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_searchTerm">
                                    <sch:rule context="admin[@type='searchTerm']">
                                        <sch:assert test=".=not(*)">The search term must be expressed in
                                            plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_sourceIdentifier">
                                    <sch:rule context="admin[@type='sourceIdentifier']">
                                        <sch:assert test=".=not(*)">The source identifier must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_sortKey">
                                    <sch:rule context="admin[@type='sortKey']">
                                        <sch:assert test=".=not(*)">The sort key must be expressed in
                                            plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="admin_subsetOwner">
                                    <sch:rule context="admin[@type='subsetOwner']">
                                        <sch:assert test=".=not(*)">The name of the subset owner must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the data-category type of the <gi>admin</gi>
                                    element, such as <val>originatingDatabase</val> or
                                        <val>entrySource</val>.</desc>
                                <valList type="closed">
                                    <valItem ident="annotatedNote">
                                        <gloss>annotatedNote</gloss>
                                        <desc>A note that can be coupled with an <gi>adminNote</gi>
                                            element to indicate the source of the note or other
                                            administrative information about the note. If no source
                                            or additional information about the note is required,
                                            use the <gi>note</gi> element.</desc>
                                    </valItem>
                                    <valItem ident="applicationSubset">
                                        <gloss>applicationSubset</gloss>
                                        <desc>An identifier that indicates that the parent element
                                            to which it applies is associated with a specific
                                            application. The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="businessUnitSubset">
                                        <gloss>businessUnitSubset</gloss>
                                        <desc>An identifier that indicates that the parent element
                                            to which it applies is associated with a specific
                                            department, division, or other unit of an enterprise.
                                            The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="conceptOrigin">
                                        <gloss>conceptOrigin</gloss>
                                        <desc>The institution, region, community, culture, country,
                                            or other venue from which a concept covered by a
                                            terminological entry originates. Because this
                                            data-category provides information about the origin of
                                            the concept, it should occur at the
                                                <gi>conceptEntry</gi> level. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <valItem ident="customerSubset">
                                        <gloss>customerSubset</gloss>
                                        <desc>An identifier that indicates that the parent element
                                            to which it applies is associated with a specific
                                            customer. The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="databaseType">
                                        <gloss>databaseType</gloss>
                                        <desc>An identifier that indicates the type of database from
                                            which the parent element originated. This element should
                                            normally occur at the <gi>conceptEntry</gi> level
                                            because typically entire entries originate from or are
                                            imported from another database. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <valItem ident="domainExpert">
                                        <gloss>domainExpert</gloss>
                                        <desc>Subject field specialist who provides information for
                                            a terminological entry, such as a definition or target
                                            language equivalent. An <gi>admin</gi> element that has
                                            a <att>type</att> attribute value of
                                                <val>domainExpert</val> can also have a
                                                <att>target</att> attribute pointing to the
                                            identifier of a reference entry in the back matter of
                                            the TBX document instance that provides information
                                            about the domain expert. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <valItem ident="elementWorkingStatus">
                                        <gloss>elementWorkingStatus</gloss>
                                        <desc>A value indicating the level of completeness and
                                            accuracy of an element (field, record, entry) within a
                                            terminological collection. The element <gi>admin</gi>
                                            when its <att>type</att> attribute has the value
                                                <val>elementWorkingStatus</val> shall contain one of
                                            the following values:<list>
                                                <item>starterElement</item>
                                                <item>workingElement</item>
                                                <item>consolidatedElement</item>
                                                <item>archiveElement</item>
                                                <item>importedElement</item>
                                                <item>exportedElement</item>

                                            </list></desc>
                                    </valItem>
                                    <valItem ident="entrySource">
                                        <gloss>entrySource</gloss>
                                        <desc>A database or file from which the entry was imported.
                                            The content shall be in plainText. <!--Because this data-category
									provides information about the origin of the entry, it should
									occur at the <gi>conceptEntry</gi> level.-->
                                            <!-- kara - is it always a question of importing? is it always a question of a database or file?--></desc>
                                    </valItem>
                                    <valItem ident="environmentSubset">
                                        <gloss>environmentSubset</gloss>
                                        <desc>An identifier that indicates a specific computer
                                            environment that the parent element is associated with.
                                            The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="indexHeading">
                                        <gloss>indexHeading</gloss>
                                        <desc>A term chosen to be used in an index to represent an
                                            item or a concept in a document. The content shall be in
                                            plainText.</desc>
                                        <!-- kara - the example and comment in the spec relate to documents, not term entries. We need to re-examine them. The note is also confusing. Omitted for now -->
                                    </valItem>
                                    <valItem ident="keyword">
                                        <gloss>keyword</gloss>
                                        <desc>A word or group of words, possibly in
                                            lexicographically standardized (lemmatized) form, taken
                                            out of the text of a document, which characterizes the
                                            text and enables its retrieval. For example, the terms
                                                <term>data-category</term> and <term>terminological
                                                entry</term> are keywords for this international
                                            standard. In a terminological database that contains the
                                            terminology of ISO 30042, they could be identified as
                                            keywords by using this element. The content shall be in
                                            plainText.</desc>
                                        <!-- kara - note confusing, omitted. This description is still confusing and does
							not relate the data-category to TBX or terminological entries-->
                                    </valItem>
                                    <valItem ident="originatingDatabase">
                                        <gloss>originatingDatabase</gloss>
                                        <desc>The database from which the parent element originated.
                                            The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="originatingInstitution">
                                        <gloss>originatingInstitution</gloss>
                                        <desc>An institution (i.e., company, government agency,
                                            etc.) that provided the information in the parent
                                            element. The content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="originatingPerson">
                                        <gloss>originatingPerson</gloss>
                                        <desc>An individual who provided the information in the
                                            parent element. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <valItem ident="productSubset">
                                        <gloss>productSubset</gloss>
                                        <desc>An identifier assigned to a term, record, or entry to
                                            indicate that it is related to or used in a product. The
                                            content shall be in plainText, and preferably one of a
                                            predefined set of picklist values.</desc>
                                    </valItem>
                                    <valItem ident="projectSubset">
                                        <gloss>projectSubset</gloss>
                                        <desc>An identifier assigned to a term, record, or entry to
                                            indicate that it is related to or used in a project. The
                                            content shall be in plainText, and preferably one of a
                                            predefined set of picklist values.</desc>
                                    </valItem>
                                    <valItem ident="searchTerm">
                                        <gloss>searchTerm</gloss>
                                        <desc>A term entered in a term entry for purposes of
                                            retrieval. The content shall be in plainText
                                            <!-- kara: how does this differ from indexHeading and keyword? The example is confusing
		   omitted for now--></desc>
                                    </valItem>
                                    <valItem ident="securitySubset">
                                        <gloss>securitySubset</gloss>
                                        <desc>A classification of a term, record, or entry
                                            indicating that its distribution is restricted for
                                            security reasons. Sometimes, terms are not released to
                                            the public until the material that uses the term
                                            (product, service, etc.) is released to the public.
                                            Until that time, this element serves to protect the data
                                            from distribution. The element <gi>admin</gi> when its
                                                <att>type</att> attribute has the value
                                                <val>securitySubset</val> shall contain one of the
                                            following values:<list>
                                                <item>public</item>
                                                <item>confidential</item>
                                            </list></desc>
                                    </valItem>
                                    <valItem ident="sortKey">
                                        <gloss>sortKey</gloss>
                                        <desc>A character string used for sorting and merging
                                            operations. A sort key can enable alphabetic or
                                            systematic access. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <valItem ident="source">
                                        <gloss>source</gloss>
                                        <desc>A complete citation of the source of the information
                                            in the parent element.
                                            <!-- kara - Comment was confusing, omitted for now --></desc>
                                    </valItem>
                                    <valItem ident="sourceIdentifier">
                                        <gloss>sourceIdentifier</gloss>
                                        <desc>A pointer to a bibliographic entry that contains
                                            information about the source of the parent element. An
                                                <gi>admin</gi> element that has a <att>type</att>
                                            attribute value of <val>sourceIdentifier</val> also has
                                            a <att>target</att> attribute containing the identifier
                                            of the bibliographic entry. The content of the element
                                            is a display value for the source.</desc>
                                    </valItem>
                                    <!-- removed per discussion with Alan Melby on Jan 4, 2008
		 <valItem ident="sourceLanguage">
		 <gloss>Source language</gloss>
		 <desc>In a translation-oriented termbase, the language in
		 which the original text is written.</desc>
		 </valItem> -->
                                    <valItem ident="subsetOwner">
                                        <gloss>subsetOwner</gloss>
                                        <desc>The owner of the subset of terminological entries to
                                            which this entry belongs. The content shall be in
                                            plainText.</desc>
                                    </valItem>
                                    <!-- removed per discussion with Alan Melby on Jan 4, 2008
		 <valItem ident="targetLanguage">
		 <gloss>Target language</gloss>
		 <desc>In a translation-oriented termbase, the language into
		 which the original text is translated.</desc>
		 </valItem> -->
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="adminGrp">
                        <desc>An element that contains a group of elements that contain
                            administrative information.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="admin"/>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="adminNote"/>
                                    <elementRef key="note"/>
                                    <elementRef key="ref"/>
                                    <elementRef key="xref"/>
                                </alternate>
                        </content>
                    </elementSpec>
                    <elementSpec ident="adminNote">
                        <desc>An administrative note about some data. Currently this element is only
                            used to specify the type of source text from which a term was found, and
                            therefore only one value is currently specified for the <att>type</att>
                            attribute. However, additional <att>type</att> attribute values can be
                            defined for additional purposes in a user-specific XCS file.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>
                        <constraintSpec ident="adminNote" scheme="schematron">
                            <constraint>
                                <sch:pattern name="adminNote_sourceType">
                                    <sch:rule context="adminNote[@type='sourceType']">
                                        <sch:assert test=". = 'parallelText' or .='backgroundText'">The
                                            type of source can only be either parallelText or
                                            backgroundText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" usage="req">
                                <valList type="closed">
                                    <valItem ident="sourceType">
                                        <gloss>sourceType</gloss>
                                        <desc>A property describing the source text, i.e. whether it
                                            is actual parallel text (text that is equivalent to text
                                            in another language) or background material. The content
                                            of the <gi>adminNote</gi> element when it has the
                                                <att>type</att> attribute value of
                                                <val>sourceType</val> shall be one of the following:<list>
                                                <item>parallelText</item>
                                                <item>backgroundText</item>
                                            </list></desc>
                                    </valItem>
                                    <valItem ident="noteSource">
                                        <gloss>noteSource</gloss>
                                        <desc>The source of a note that is expressed in a
                                                <gi>admin</gi> element having the <att>type</att>
                                            attribute value <val>annotatedNote</val>.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="conceptEntry">
                        <desc>The root element of a terminological entry. It shall contain at least
                            one language section.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="entity.auxInfo"/>
                            
                                <elementRef key="langSec" minOccurs="1" maxOccurs="unbounded" />
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="date">
                        <desc>A date in ISO format. Permissible date values comply with ISO 8601 and
                            shall use the format yyyy-mm-dd. The date element is used with
                            terminology management data-categories in a <gi>transacGrp</gi> element. </desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <dataRef name="date"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="descrip">
                        <desc>An element that contains descriptive information about a concept, or
                            relations to other concepts. The type of information that the element
                            contains, and any restrictions on the permissible values of the element,
                            are determined by the value of the <att>type</att> attribute.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                            <!-- data-category constraints from the default XCS -->
                            <!-- The following constraints specify that a descrip elements might be further constrained than noteText. Level constraints have not
					been expressed.-->
                        </content>
                        <constraintSpec ident="descrip" scheme="schematron">
                            <constraint>
                                <sch:pattern name="descrip_antonymConcept">
                                    <sch:rule context="descrip[@type='antonymConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')]))and(parent::conceptEntry or parent::descripGrp/parent::conceptEntry)"
                                            >Antonym concepts should occur at the entry (concept) level.
                                            The antonym-concept in this element must be expressed in
                                            basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_associatedConcept">
                                    <sch:rule context="descrip[@type='associatedConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')]))and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            >Associated concepts should occur at the conceptEntry or the
                                            langSec level. The term in this element must be expressed in
                                            basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_audio">
                                    <sch:rule context="descrip[@type='audio']">
                                        <sch:assert
                                            test="(.=not(*))and (parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec)"
                                            >The content of this element must be plain text. It can
                                            occur at the concept (conceptEntry) level, the langSec level
                                            or the term (termSec) level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_broaderConceptGeneric">
                                    <sch:rule context="descrip[@type='broaderConceptGeneric']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            >Generic broader concepts should occur at the conceptEntry
                                            level or the langSec level. The term in this element must be
                                            expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_broaderConceptPartitive">
                                    <sch:rule context="descrip[@type='broaderConceptPartitive']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            >Partitive broader concepts should occur at the conceptEntry
                                            level or the langSec level. The term in this element must be
                                            expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_characteristic">
                                    <sch:rule context="descrip[@type='characteristic']">
                                        <sch:assert
                                            test="(.=not(*))and (parent::termSec or parent::descripGrp/parent::termSec)"
                                            >A characteristic should only occur at the term (termSec)
                                            level. The content of this element must be plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_classificationCode">
                                    <sch:rule context="descrip[@type='classificationCode']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec)"
                                            > The content of this element must be
                                            plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_conceptPosition">
                                    <sch:rule context="descrip[@type='conceptPosition']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            > Information about a concept position should occur at the
                                            conceptEntry level or the langSec level, and it must be
                                            expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_coordinateConceptGeneric">
                                    <sch:rule context="descrip[@type='coordinateConceptGeneric']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            >Generic coordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The term in this
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_coordinateConceptPartitive">
                                    <sch:rule context="descrip[@type='coordinateConceptPartitive']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::conceptEntry or parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec)"
                                            >Partitive coordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The term in this
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_context">
                                    <sch:rule context="descrip[@type='context']">
                                        <sch:assert
                                            test="parent::termSec or parent::descripGrp/parent::termSec"
                                            >A context sentence can only occur at the term (termSec)
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_definition">
                                    <sch:rule context="descrip[@type='definition']">
                                        <sch:assert
                                            test="parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec"
                                            > A definition must occur at the conceptEntry level, the
                                            langSec level, or the term (termSec) level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_example">
                                    <sch:rule context="descrip[@type='example']">
                                        <sch:assert
                                            test="parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec"
                                            > An example must occur at the conceptEntry level, the
                                            langSec level, or the term (termSec) level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_explanation">
                                    <sch:rule context="descrip[@type='explanation']">
                                        <sch:assert
                                            test="parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec"
                                            > An explanation must occur at the conceptEntry level, the
                                            langSec level, or the term (termSec) level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_figure">
                                    <sch:rule context="descrip[@type='figure']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec)"
                                            > The content of this element must be plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_otherBinaryData">
                                    <sch:rule context="descrip[@type='otherBinaryData']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::langSec or parent::termSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::termSec)"
                                            >The content of this element must be plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_quantity">
                                    <sch:rule context="descrip[@type='quantity']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::termSec or parent::descripGrp/parent::termSec)"
                                            >A quantity should occur at the term (termSec) level. The
                                            content of this element must be plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_range">
                                    <sch:rule context="descrip[@type='range']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::termSec or parent::descripGrp/parent::termSec)"
                                            >A range should occur at the term (termSec) level. The
                                            content of this element must be plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_relatedConcept">
                                    <sch:rule context="descrip[@type='relatedConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Related concepts should occur at the conceptEntry level or
                                            the langSec level. The content of this element must be
                                            expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_relatedConceptBroader">
                                    <sch:rule context="descrip[@type='relatedConceptBroader']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')]) )and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Broader related concepts should occur at the conceptEntry
                                            level or the langSec level. The content of this element must
                                            be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_relatedConceptNarrower">
                                    <sch:rule context="descrip[@type='relatedConceptNarrower']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Narrower related concepts should occur at the conceptEntry
                                            level or the langSec level. The content of this element must
                                            be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_reliabilityCode">
                                    <sch:rule context="descrip[@type='reliabilityCode']">
                                        <sch:assert
                                            test="((.='1' or .='2' or .='3' or .='4' or .='5' or .='6' or .='7' or .='8' or .='9' or .='10') and (parent::langSec or parent::conceptEntry or parent::termSec or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::termSec))"
                                            >A reliability code can be a value from 1 (least reliable)
                                            to 10 (most reliable).</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_sampleSentence">
                                    <sch:rule context="descrip[@type='sampleSentence']">
                                        <sch:assert
                                            test="parent::termSec or parent::descripGrp/parent::termSec"
                                            > A sample sentence can only occur at the term (termSec)
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_sequentiallyRelatedConcept">
                                    <sch:rule context="descrip[@type='sequentiallyRelatedConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Sequentially related concepts should occur at the
                                            conceptEntry level or the langSec level. The content of this
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_spatiallyRelatedConcept">
                                    <sch:rule context="descrip[@type='spatiallyRelatedConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Spatially related concepts should occur at the conceptEntry
                                            level or the langSec level. The content of the element must
                                            be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_subjectField">
                                    <sch:rule context="descrip[@type='subjectField']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::descripGrp/parent::conceptEntry)"
                                            > A subject field must be a plainText value. Subject fields
                                            usually occur at the conceptEntry level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_subordinateConceptGeneric">
                                    <sch:rule context="descrip[@type='subordinateConceptGeneric']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            > Generic subordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The content of the
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_subordinateConceptPartitive">
                                    <sch:rule context="descrip[@type='subordinateConceptPartitive']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            > Partitive subordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The content of the
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_superordinateConceptGeneric">
                                    <sch:rule context="descrip[@type='superordinateConceptGeneric']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Generic superordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The content of the
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_superordinateConceptPartitive">
                                    <sch:rule context="descrip[@type='superordinateConceptPartitive']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Partitive superordinate concepts should occur at the
                                            conceptEntry level or the langSec level. The content of the
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_table">
                                    <sch:rule context="descrip[@type='table']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::langSec or parent::conceptEntry or parent::termSec or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::termSec)"
                                            > The content of this element must be plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_temporallyRelatedConcept">
                                    <sch:rule context="descrip[@type='temporallyRelatedConcept']">
                                        <sch:assert
                                            test="(.=not(*[not(local-name()='hi')])) and (parent::langSec or parent::conceptEntry or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry)"
                                            >Temporally related concepts should occur at the
                                            conceptEntry level or the langSec level. The content of the
                                            element must be expressed in basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_thesaurusDescriptor">
                                    <sch:rule context="descrip[@type='thesaurusDescriptor']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::conceptEntry or parent::descripGrp/parent::conceptEntry)"
                                            >Thesaurus descriptors should occur at the conceptEntry
                                            level. The content of this element must be plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_unit">
                                    <sch:rule context="descrip[@type='unit']">
                                        <sch:assert
                                            test="(not (*) and (parent::termSec or parent::descripGrp/parent::termSec))"
                                            > Units should occur at the term (termSec) level. Units must
                                            be expressed in plainText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descrip_video">
                                    <sch:rule context="descrip[@type='video']">
                                        <sch:assert
                                            test="(.=not(*)) and (parent::langSec or parent::conceptEntry or parent::termSec or parent::descripGrp/parent::langSec or parent::descripGrp/parent::conceptEntry or parent::descripGrp/parent::termSec)"
                                            >The content of this element must be in plain
                                            text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the data-category type of the <gi>descrip</gi>
                                    element, such as <val>definition</val> or
                                        <val>associated-concept</val>.</desc>
                                <valList type="closed">
                                    <valItem ident="antonymConcept">
                                        <gloss>antonymConcept</gloss>
                                        <desc>A concept that is opposite in meaning to the concept
                                            represented by the entry containing the <gi>descrip</gi>
                                            element. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>antonymConcept</val> can also have a
                                                <att>target</att> attribute pointing to the entry ID
                                            of the <gi>conceptEntry</gi> that contains the antonym
                                            concept. The display term in the content of the element
                                            shall be expressed in basicText.</desc>
                                        <!-- kara: tbx comment not included -->

                                    </valItem>
                                    <valItem ident="associatedConcept">
                                        <gloss>associatedConcept</gloss>
                                        <desc>A concept that exhibits a relation to the subject
                                            concept that can be established on the basis of
                                            non-hierarchical thematic connections. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>associatedConcept</val> can also
                                            have a <att>target</att> attribute pointing to the entry
                                            ID of the <gi>conceptEntry</gi> that contains the
                                            associated concept. </desc>
                                        <desc>For example, <term>teacher</term> and
                                                <term>school</term> represent associated
                                            concepts.</desc>
                                    </valItem>
                                    <valItem ident="audio">
                                        <gloss>audio</gloss>
                                        <desc>A name or other identifier of an audio file: sound,
                                            spoken words, music, or other audible representations
                                            used to illustrate or explain terms or concepts. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>audio</val> can also have a
                                                <att>target</att> attribute pointing to the ID of a
                                                <gi>refObject</gi> in the back matter of the TBX
                                            document instance that describes and points to the audio
                                            file. The element content shall be in plainText.
                                                <desc>If a direct pointer to the audio file is
                                                preferred within the <gi>conceptEntry</gi>, rather
                                                than pointing to the back matter, use an
                                                  <gi>xref</gi> instead.</desc></desc>

                                    </valItem>
                                    <valItem ident="broaderConceptGeneric">
                                        <gloss>broaderConceptGeneric</gloss>
                                        <desc>A concept two or more levels of abstraction higher
                                            than subject concept in a generic hierarchical concept
                                            system. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>broaderConceptGeneric</val> can also have a
                                                <att>target</att> attribute pointing to the entry ID
                                            of the <gi>conceptEntry</gi> that contains the broader
                                            concept. Generic relations between concepts are "is-a"
                                            relations. This means that the narrower concept "is an"
                                            instance of its broader generic concept. For example, a
                                                <term>dog</term> is a <term>canine animal</term>,
                                            and a <term>canine animal</term> is a
                                                <term>mammal</term>, therefore <term>mammal</term>
                                            is a broader generic concept for
                                            <term>dog</term>.</desc>

                                    </valItem>
                                    <valItem ident="broaderConceptPartitive">
                                        <gloss>boaderConceptPartitive</gloss>
                                        <desc>A concept two or more levels of abstraction higher
                                            than subject concept in a part-whole or meronymic
                                            hierarchical concept system. A <gi>descrip</gi> element
                                            that has a <att>type</att> attribute value of
                                                <val>broaderConceptPartitive</val> can also have a
                                                <att>target</att> attribute pointing to the entry ID
                                            of the <gi>conceptEntry</gi> that contains the broader
                                            concept. For example, a <term>floor board</term> is part
                                            of a <term>house</term> (broader partitive concept), but
                                            it can be more narrowly defined as being part of the
                                                <term>floor</term> (superordinate partitive
                                            concept), which in turn is part of the house. Partitive
                                            relations between concepts are "has-a" relations. This
                                            means that the broader partitive concept "has" its
                                            narrower concepts as parts of itself.</desc>

                                    </valItem>
                                    <valItem ident="characteristic">
                                        <gloss>characteristic</gloss>
                                        <desc>An abstraction of a property of an object or of a set
                                            of objects. For example, <emph>flammability</emph> is a
                                            characteristic of <term>fuel</term>. Essential
                                            characteristics can be used to define concepts. The
                                            element content shall be in plainText.</desc>

                                    </valItem>
                                    <valItem ident="classificationCode">
                                        <gloss>classificationCode</gloss>
                                        <desc>A set of symbols, with rules for their application,
                                            used to represent classes and their interrelations. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>classificationCode</val> can
                                            also have a <att>target</att> attribute pointing to the
                                            ID of a bibliographic <gi>refobject</gi> in the back
                                            matter describing the classification code. The element
                                            content shall be in plain text. <desc>If a direct
                                                pointer to the classification code is preferred
                                                within the <gi>conceptEntry</gi>, rather than
                                                pointing to the back matter, use an <gi>xref</gi>
                                                instead.</desc></desc>
                                        <!-- kara - note about martif omitted, other description also omitted 
		   because not helpful. Need a useful description. -->
                                        <desc/>
                                    </valItem>
                                    <valItem ident="conceptPosition">
                                        <gloss>conceptPosition</gloss>
                                        <desc>The position of a concept in a concept system. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>conceptPosition</val> can also
                                            have a <att>target</att> attribute pointing to the ID of
                                            a position in the concept system. The element content
                                            shall be in plainText.</desc>
                                        <!-- kara - comment from TBX omitted - not helpful. -->
                                        <desc/>
                                    </valItem>
                                    <valItem ident="context">
                                        <gloss>context</gloss>
                                        <desc>A text which illustrates a concept or a term, by
                                            containing the concept designation itself. </desc>
                                        <!-- kara - comment from TBX omitted - not helpful. -->
                                        <desc>Contexts must be authentic, that is, they must be
                                            obtained from an existing source, and not created by the
                                            terminologist. Contexts are documented very frequently
                                            in terminology collections. Contexts can provide
                                            information for determining term usage and collocations.
                                            In TBX, the context is a term-related data-category. A
                                            context can be further categorized according to context
                                            type.</desc>
                                    </valItem>

                                    <valItem ident="coordinateConceptGeneric">
                                        <gloss>coordinateConceptGeneric</gloss>
                                        <desc>A concept having the same nearest superordinate
                                            concept <!--and same criterion of subdivision --> as the
                                            concept being described by this <gi>descrip</gi> element
                                            in a generic concept system. A <gi>descrip</gi> element
                                            that has a <att>type</att> attribute value of
                                                <val>coordinateConceptGeneric</val> can also have a
                                                <att>target</att> attribute pointing to the ID of
                                            the coordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="coordinateConceptPartitive">
                                        <gloss>coordinateConceptPartitive</gloss>
                                        <desc>A concept having the same nearest superordinate
                                            concept <!-- and same criterion of subdivision --> as
                                            the concept being described by this <gi>descrip</gi>
                                            element in a partitive concept system. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>coordinateConceptPartitive</val>
                                            can also have a <att>target</att> attribute pointing to
                                            the ID of the coordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="definition">
                                        <gloss>definition</gloss>
                                        <desc>A representation of a concept by a descriptive
                                            statement which serves to differentiate that concept
                                            from related concepts.</desc>
                                    </valItem>
                                    <valItem ident="example">
                                        <gloss>example</gloss>
                                        <desc>A text which illustrates a concept or a term, by
                                            providing an example of the object designated by the
                                            concept or term, and not necessarily containing the
                                            concept designation itself.
                                            <!-- Some
									databases use <emph>example</emph> as a label for contextual
									references. The content of those data-categories should be
									converted to the data-category <ptr target="context"/> for
									interchange purposes. --></desc>
                                    </valItem>
                                    <valItem ident="explanation">
                                        <gloss>explanation</gloss>
                                        <desc>A statement that describes and clarifies a concept and
                                            makes it understandable, but does not necessarily
                                            differentiate it from other concepts.Some databases use
                                                <emph>example</emph> as a label for contextual
                                            references. The content of those data-categories should
                                            be converted to the data-category <ptr target="context"
                                            /> for interchange purposes.</desc>
                                        <!-- kara - omitted example and comment -->
                                    </valItem>
                                    <valItem ident="figure">
                                        <gloss>figure</gloss>
                                        <desc>A name or other description of a diagram, picture, or
                                            other graphic material used to illustrate a concept or
                                            group of concepts. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of <val>figure</val>
                                            can also have a <att>target</att> attribute pointing to
                                            the ID of a <gi>refObject</gi> in the back matter of the
                                            TBX document instance that describes and points to the
                                            file that contains the figure. The element content shall
                                            be in plainText. <desc>If a direct pointer to the file
                                                that contains the figure is preferred within the
                                                  <gi>conceptEntry</gi>, rather than pointing to the
                                                back matter, use an <gi>xref</gi>
                                            instead.</desc></desc>
                                        <!-- kara - question, can this (and perhaps others like this)
		   be an empty element? If so, we haven't clarified that sufficiently. -->
                                    </valItem>
                                    <valItem ident="otherBinaryData">
                                        <gloss>otherBinaryData</gloss>
                                        <desc>Any binary data not covered by the categories <ptr
                                                target="figure"/>, <ptr target="audio"/>, <ptr
                                                target="video"/>, and <ptr target="table"/>. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>otherBinaryData</val> can also
                                            have a <att>target</att> attribute pointing to the ID of
                                            a <gi>refObject</gi> in the back matter of the TBX
                                            document instance that describes and points to the
                                            binary file. The element content shall be in plainText.
                                                <desc>If a direct pointer to the binary file is
                                                preferred within the <gi>conceptEntry</gi>, rather
                                                than pointing to the back matter, use an
                                                  <gi>xref</gi> instead.</desc></desc>
                                    </valItem>
                                    <valItem ident="quantity">
                                        <gloss>quantity</gloss>
                                        <desc>A measurable quantity associated with a concept. The
                                            element content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="range">
                                        <gloss>range</gloss>
                                        <desc>The pair of limits within which a quantity is
                                            measured, as expressed by stating the lower and upper
                                            permissible values.
                                            <!--Range, like <ptr target="unit"/> and <ptr
										target="quantity"/>, can be a delimiting characteristic in
									defining a concept. -->The
                                            element content shall be in plainText.</desc>
                                    </valItem>
                                    <valItem ident="relatedConcept">
                                        <gloss>relatedConcept</gloss>
                                        <desc>A concept that has an associative relation to another
                                            concept, such as <term>teacher</term> and
                                                <term>school</term>. A <gi>descrip</gi> element that
                                            has a <att>type</att> attribute value of
                                                <val>relatedConcept</val> can also have a
                                                <att>target</att> attribute pointing to the entry
                                            identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="relatedConceptBroader">
                                        <gloss>relatedConceptBroader</gloss>
                                        <desc>A concept that is broader at some level with respect
                                            to a related or associated concept, but without
                                            comprising any reference to a generic or partitive
                                            system. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>relatedConceptBroader</val> can also have a
                                                <att>target</att> attribute pointing to the entry
                                            identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="relatedConceptNarrower">
                                        <gloss>relatedConceptNarrower</gloss>
                                        <desc>A concept that is narrower at some level with respect
                                            to a related or associated concept, but without
                                            comprising any reference to a generic or partitive
                                            system. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>relatedConceptNarrower</val> can also have a
                                                <att>target</att> attribute pointing to the entry
                                            identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="reliabilityCode">
                                        <gloss>reliabilityCode</gloss>
                                        <desc>A code assigned to a data-category or record
                                            indicating accuracy and/or completeness. The content of
                                            the <gi>descrip</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>reliabilityCode</val> shall be a value from 1
                                            (least reliable) to 10 (most reliable).</desc>
                                    </valItem>
                                    <valItem ident="sampleSentence">
                                        <gloss>sampleSentence</gloss>
                                        <desc>A sentence composed (frequently by a terminologist or
                                            language planner) to illustrate the use of a term in
                                            cases where an authentic context is unavailable.
                                            Although contextual information should ideally be taken
                                            from actual texts written in the language in question,
                                            such contextual references may not exist for newly
                                            coined or suggested terms.</desc>
                                    </valItem>
                                    <valItem ident="sequentiallyRelatedConcept">
                                        <gloss>sequentiallyRelatedConcept</gloss>
                                        <desc>A concept that has a relation to the subject concept
                                            based on spatial or temporal proximity. Temporal
                                            relations and spatial relations can be sequential. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>sequentiallyRelatedConcept</val>
                                            can also have a <att>target</att> attribute pointing to
                                            the entry identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="spatiallyRelatedConcept">
                                        <gloss>spatiallyRelatedConcept</gloss>
                                        <desc>A concept that has a relation of dependence with the
                                            subject concept, referring to objects based on their
                                            relative physical positions. A <gi>descrip</gi> element
                                            that has a <att>type</att> attribute value of
                                                <val>spatiallyRelatedConcept</val> can also have a
                                                <att>target</att> attribute pointing to the entry
                                            identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="subjectField">
                                        <gloss>subjectField</gloss>
                                        <desc>A field of special knowledge.
                                            <!-- More than one
		   subject field can be indicated for a given concept, and subject
		   fields can be designated hierarchically as subfields by indicating a
		   level index.-->
                                            Subject fields can be expressed in multiple levels, for
                                            example: Subject field (level 1): disease, Subject field
                                            (level 2): cancer, Subject field (level 3):
                                            non-Hodgkin's lymphoma. Subject fields shall be
                                            expressed in plainText, and preferably be selected from
                                            a defined set of picklist values. Subject fields shall
                                            be specified at the concept (conceptEntry) level.</desc>
                                    </valItem>
                                    <valItem ident="subordinateConceptGeneric">
                                        <gloss>subordinateConceptGeneric</gloss>
                                        <desc>A concept that has a generic relation with the subject
                                            concept, and a broader intension. A <gi>descrip</gi>
                                            element that has a <att>type</att> attribute value of
                                                <val>subordinateConceptGeneric</val> can also have a
                                                <att>target</att> attribute pointing to the entry
                                            identifier of the subordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="subordinateConceptPartitive">
                                        <gloss>subordinateConceptPartitive</gloss>
                                        <desc>A concept that has a partitive relation with the
                                            subject concept, and represents one of the parts of the
                                            subject concept. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>subordinateConceptPartitive</val> can also have
                                            a <att>target</att> attribute pointing to the entry
                                            identifier of the subordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="superordinateConceptGeneric">
                                        <gloss>superordinateConceptGeneric</gloss>
                                        <desc>A concept that has a generic relation with the subject
                                            concept, and a narrower intension. A <gi>descrip</gi>
                                            element that has a <att>type</att> attribute value of
                                                <val>superordinateConceptGeneric</val> can also have
                                            a <att>target</att> attribute pointing to the entry
                                            identifier of the superordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="superordinateConceptPartitive">
                                        <gloss>superordinateConceptPartitive</gloss>
                                        <desc>A concept that has a partitive relation with the
                                            subject concept, and represents the sum of the parts; a
                                                <emph>comprehensive concept</emph>. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of
                                                <val>superordinateConceptPartitive</val> can also
                                            have a <att>target</att> attribute pointing to the entry
                                            identifier of the superordinate concept.</desc>
                                    </valItem>
                                    <valItem ident="table">
                                        <gloss>table</gloss>
                                        <desc>The name of a table that is used to describe a
                                            concept. The table itself can be contained (or referred
                                            to as an external file) in a <gi>refobject</gi> in the
                                            back matter of a TBX document instance. The
                                                <att>target</att> attribute points to the
                                                <gi>refobject</gi> identifier. The element content
                                            shall be in plainText. <desc>If a direct pointer to the
                                                file that contains the table is preferred within the
                                                  <gi>conceptEntry</gi>, rather than pointing to the
                                                back matter, use an <gi>xref</gi> instead.</desc>
                                        </desc>
                                    </valItem>
                                    <valItem ident="temporallyRelatedConcept">
                                        <gloss>temporallyRelatedConcept</gloss>
                                        <desc>A concept related to the subject concept through a
                                            sequential relation involving events in time. A
                                                <gi>descrip</gi> element that has a <att>type</att>
                                            attribute value of <val>temporallyRelatedConcept</val>
                                            can also have a <att>target</att> attribute pointing to
                                            the entry identifier of the related concept.</desc>
                                    </valItem>
                                    <valItem ident="thesaurusDescriptor">
                                        <gloss>thesaurusDescriptor</gloss>
                                        <desc>The term in a thesaurus that can be used to represent
                                            a concept in a terminological entry. A <gi>descrip</gi>
                                            element that has a <att>type</att> attribute value of
                                                <val>thesaurusDescriptor</val> can also have a
                                                <att>target</att> attribute pointing to the ID of
                                            the <gi>refObject</gi> in the back matter of the TBX
                                            document instance that describes the thesaurus. The
                                            element content shall be in plainText. <desc>If a direct
                                                pointer to the thesaurus is preferred within the
                                                  <gi>conceptEntry</gi>, rather than pointing to the
                                                back matter, use an <gi>xref</gi> instead.</desc>
                                        </desc>
                                    </valItem>
                                    <valItem ident="unit">
                                        <gloss>unit</gloss>
                                        <desc>A precisely-specified quantity in terms of which the
                                            magnitudes of other quantities can be stated, such as
                                            meter or volt. The element content shall be in
                                            plainText.
                                            <!-- kara - confusing, see comment
		   in html file. Also, I eliminated the comment, not useful. --></desc>
                                    </valItem>
                                    <valItem ident="video">
                                        <gloss>video</gloss>
                                        <desc>A name or other description of recorded visual images
                                            used to represent or illustrate terminological
                                            information. A <gi>descrip</gi> element that has a
                                                <att>type</att> attribute value of <val>video</val>
                                            can also have a <att>target</att> attribute pointing to
                                            the ID of a <gi>refObject</gi> in the back matter of the
                                            TBX document instance that describes and points to the
                                            video file. The element content shall be in plainText.
                                                <desc>If a direct pointer to the video file is
                                                preferred within the <gi>conceptEntry</gi>, rather
                                                than pointing to the back matter, use an
                                                  <gi>xref</gi> instead.</desc></desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="descripGrp">
                        <desc>Contains one <gi>descrip</gi> element as well as additional child
                            elements for associated administrative information.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="descrip"/>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="descripNote"/>
                                    <elementRef key="admin"/>
                                    <elementRef key="adminGrp"/>
                                    <elementRef key="transacGrp"/>
                                    <elementRef key="note"/>
                                    <elementRef key="ref"/>
                                    <elementRef key="xref"/>
                                </alternate>
                        </content>
                    </elementSpec>
                    <elementSpec ident="descripNote">
                        <desc>Element used to indicate the type of definition or context with which
                            it is associated.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>
                        <constraintSpec ident="descripNote" scheme="schematron">
                            <constraint>
                                <sch:pattern name="descripNote_contextType">
                                    <sch:rule context="descripNote[@type='contextType']">
                                        <sch:assert
                                            test=". ='definingContext' 
                                            or .='explanatoryContext' 
                                            or .='associativeContext' 
                                            or .='linguisticContext' 
                                            or .='metalinguisticContext' 
                                            or .='translatedContext'"
                                            > Contexts can only be of one of the following types:
                                            definingContext, explanatoryContext, associativeContext,
                                            linguisticContext, metalinguisticContext or
                                            translatedContext.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="descripNote_definitionType">
                                    <sch:rule context="descripNote[@type='definitionType']">
                                        <sch:assert
                                            test=".=
                                            'intensionalDefinition' or .='extensionalDefinition' or .='partitiveDefinition' or .='translatedDefinition'"
                                            > Definitions can only be of one of the following types:
                                            intensionalDefinition, extensionalDefinition,
                                            partitiveDefinition, or translatedDefinition.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>

                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the data-category type of the <gi>descripNote</gi>
                                    element, such as <val>contextType</val>.</desc>
                                <valList type="closed">
                                    <valItem ident="contextType">
                                        <gloss>contextType</gloss>
                                        <desc>The characterization of a context according to a set
                                            of theoretical or pragmatic types.</desc>
                                        <desc>The content of the <gi>descripNote</gi> element when
                                            it has a <att>type</att> attribute value of
                                                <val>contextType</val> shall be one of the following:<list>
                                                <item>definingContext</item>
                                                <item>explanatoryContext</item>
                                                <item>associativeContext</item>
                                                <item>linguisticContext</item>
                                                <item>metalinguisticContext</item>
                                                <item>translatedContext</item>
                                            </list></desc>
                                    </valItem>

                                    <valItem ident="definitionType">
                                        <gloss>definitionType</gloss>
                                        <desc>The characterization of a definition according to a
                                            set of theoretical or pragmatic types.</desc>
                                        <!-- kara - example from TBX omitted - not helpful. Also, it says this takes a target attribute, but I don't think so (contextType 
		   doesn't)-->
                                        <desc>The content of the <gi>descripNote</gi> element when
                                            it has a <att>type</att> attribute value of
                                                <val>definitionType</val> shall be one of the following:<list>
                                                <item>intensionalDefinition</item>
                                                <item>extensionalDefinition</item>
                                                <item>partitiveDefinition</item>
                                                <item>translatedDefinition</item>

                                            </list></desc>
                                    </valItem>
                                    <!-- removed ...
		 <valItem ident="descriptionType">
		 <gloss>Description type</gloss>
		 <desc>A statement that provides further information on any part of a
		 terminological entry.</desc>
		 </valItem>
	    -->
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="langSec">
                        <desc>A nesting element that contains all the information in a
                            terminological entry pertaining to one language, including all the
                                <gi>termSec</gi> elements (terms and associated information) for
                            that language.</desc>
                        <content>
                            <elementRef key="entity.auxInfo"/>
                                <elementRef key="termSec" minOccurs="1" maxOccurs="unbounded"/>
                        </content>
                        <attList>
                            <attDef ident="xml:lang" usage="req">
                                <desc>Indicates the language of the language section. This attribute
                                    is required for the <gi>langSec</gi> element. See also the
                                    description on the <gi>tbx</gi> element.</desc>
                                <datatype>
                                    <!-- to declare the languages used in a TBX document instance, specify the language codes as shown below. This sample markup should
								be inserted to REPLACE the <text/> element. Substitute the values "en" and "de" with your own language code values, and add  more values as needed.  You can use any language code 
								format that is supported by IETF RFC 4646 or its successor.
								Sample markup starts here to replace <text/>
								<rng:choice>
								<rng:value>en</rng:value>
								<rng:value>de</rng:value>
								</rng:choice>
								Sample markup ends here to replace <text/>-->
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>

                        <!-- attributes also include "lang"?? -->
                    </elementSpec>
                    <elementSpec ident="note">
                        <desc>Any kind of note. </desc>
                        <classes>
                            <memberOf key="idlang"/>
                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                    </elementSpec>
                    <!--<elementSpec ident="ntig">
				<desc>A <emph>nesting term information group</emph>. A grouping element that
					contains child elements describing a term. It is equivalent to a <gi>termSec</gi>
					except that it allows the description of term components.</desc>
				<classes>
					<memberOf key="id"/>
				</classes>
				<content>
					<elementRef key="termGrp"/>
					<elementRef key="entity.auxInfo"/>
				</content>
			</elementSpec>-->
                    <elementSpec ident="ref">
                        <desc>A cross-reference that points to another element within the
                                <gi>tbx</gi> element of the TBX document instance. The content of
                            the element is display text of the target element (i.e. the term), and
                            shall be in plainText.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>
                        <attList>
                            <attDef ident="type" usage="req">
                                <valList type="closed">
                                    <valItem ident="crossReference">
                                        <gloss>crossReference</gloss>
                                        <desc>A pointer to another related location, such as another
                                            entry or another term. The <gi>ref</gi> element with a
                                                <att>type</att> attribute value of
                                                <val>cross-reference</val> shall also have a
                                                <att>target</att> attribute to point to the
                                            identifier of the entry or term.</desc>
                                    </valItem>
                                    <valItem ident="see">
                                        <gloss>see</gloss>
                                        <desc>An element that points to a location where additional
                                            information can be found. The <gi>ref</gi> element with
                                            a <att>type</att> attribute value of <val>see</val>
                                            shall also have a <att>target</att> attribute to point
                                            to the location of the information.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="term">
                        <desc>The term that is being described in a <gi>termSec</gi>. This element,
                            as well as other term-like elements such as those mentioned in the table
                                <emph>Types of terms, relations to terms</emph> in section 9, can
                            contain a <gi>hi</gi> element to allow a limited amount of inline
                            markup. This is intended to handle markup requirements in special cases
                            such as may be required for terms that represent scientific concepts.
                            However, it is strongly recommended to use inline markup only when
                            necessary to represent the term in its base form. Do not use the
                                <gi>hi</gi> element for presentational styles chosen for esthetic
                            purposes.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="entity.basicText"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="termComp">
                        <desc>A term component. It includes the text of a part of a word (such as a
                            morpheme or a syllable) or one of the words making up a multi-word term.
                            The type of term component will depend on the value of the
                                <att>type</att> attribute of the <gi>termCompSec</gi>
                            element.</desc>
                        <classes>
                            <memberOf key="idlang"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="termCompGrp">
                        <desc>A grouping element that includes one <gi>termComp</gi> plus additional
                            elements describing the term component, such as notes, administrative
                            information, and cross references.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="termComp"/>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="termNote"/>
                                    <elementRef key="termNoteGrp"/>
                                </alternate>
                            <elementRef key="entity.noteLinkInfo"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="termCompSec">
                        <desc>A grouping element that contains at least one <gi>termComp</gi>
                            element (usually more) or at least one <gi>termCompGrp</gi> element plus
                            optionally some additional information about the term components. This
                            element is designed to contain the components of a term. The value of
                            the <att>type</att> attribute indicates what type of term components it
                            contains.</desc>

                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="entity.auxInfo"/>
                            <alternate minOccurs="1" maxOccurs="unbounded">
                                    <elementRef key="termComp"/>
                                    <elementRef key="termCompGrp"/>
                                </alternate>
                        </content>

                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the type of the <gi>termCompSec</gi>, such as
                                        <val>hyphenation</val>. The value indicates on what basis
                                    the term components were identified, such as by hyphenation
                                    parts or by syllables.</desc>
                                <valList type="closed">
                                    <valItem ident="hyphenation">
                                        <gloss>Hyphenation</gloss>
                                        <desc>The <gi>termComp</gi> elements contain the parts of a
                                            term as it would be hyphenated, such as at the end of a
                                            line, according to a given set of rules.</desc>
                                        <!-- kara : comment omitted, not essential -->
                                    </valItem>
                                    <valItem ident="lemma">
                                        <gloss>Lemma</gloss>
                                        <desc>The <gi>termComp</gi> elements contain the base form
                                            of the term or of the individual words that it
                                            comprises. A base form of a word or term, sometimes
                                            called a <term>lemma</term>, is the form that is used as
                                            the formal dictionary entry for the term. For nouns, the
                                            base form is frequently the nominative singular form (in
                                            languages that show variation by case). For adjectives
                                            it is the positive form of the adjective, as opposed to
                                            the comparative, and in some languages it is
                                            uninflected, whereas in others it is the masculine
                                            singular. For verbs, it is generally the
                                            infinitive.</desc>

                                    </valItem>
                                    <valItem ident="morphologicalElement">
                                        <gloss>Morphological element</gloss>
                                        <desc>The <gi>termComp</gi> elements contain the individual
                                            morphemes that comprise the term. .</desc>

                                    </valItem>
                                    <valItem ident="syllabification">
                                        <gloss>Syllabification</gloss>
                                        <desc>The <gi>termComp</gi> elements contain the individual
                                            syllables that comprise the term.</desc>

                                    </valItem>
                                    <valItem ident="termElement">
                                        <gloss>Term element</gloss>
                                        <desc>The <gi>termComp</gi> elements contain any other
                                            logically significant portion of the term. </desc>
                                        <!-- kara :  Also, comment omitted, not understandable.-->
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>

                    </elementSpec>
                    <!--<elementSpec ident="termGrp">
				<desc>Element used in an <gi>ntig</gi> which contains one <gi>term</gi> and
					optionally additional information about the term. This element is primarily used
					in conjunction with <gi>ntig</gi> when the term is broken down into components. </desc>
				<classes>
					<memberOf key="id"/>
				</classes>
				<content>
					<elementRef key="term"/>
					<alternate minOccurs="0" maxOccurs="unbounded">
							<elementRef key="termNote"/>
							<elementRef key="termNoteGrp"/>
						</alternate>
					<rng:zeroOrMore>
						<elementRef key="termCompList"/>
					</rng:zeroOrMore>
				</content>
			</elementSpec>-->
                    <elementSpec ident="termNote">
                        <desc>A meta data-category used for describing terms. A <att>type</att>
                            attribute specifies what kind of information is included in a particular
                            instance of this element.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                        <constraintSpec ident="termNote" scheme="schematron">
                            <constraint>
                                <sch:pattern name="termNote_abbreviatedFormFor">
                                    <sch:rule context="termNote[@type='abbreviatedFormFor']">
                                        <sch:assert test=".=not(*[not(local-name()='hi')])"> The value
                                            of the abbreviated form in this element must be expressed in
                                            basicText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_administrativeStatus">
                                    <sch:rule context="termNote[@type='administrativeStatus']">
                                        <sch:assert
                                            test=".=
                                            'standardizedTerm-admn-sts' or .='preferredTerm-admn-sts' or .='admittedTerm-admn-sts' or .='deprecatedTerm-admn-sts' or .='supersededTerm-admn-sts' or .='legalTerm-admn-sts' or .='regulatedTerm-admn-sts'"
                                            >The administrative status must be
                                            standardizedTerm-admn-sts, preferredTerm-admn-sts,
                                            admittedTerm-admn-sts, deprecatedTerm-admn-sts,
                                            supersededTerm-admn-sts, legalTerm-admn-sts, or
                                            regulatedTerm-admn-sts. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_antonymTerm">
                                    <sch:rule context="termNote[@type='antonymTerm']">
                                        <sch:assert test="(.=not(*[not(local-name()='hi')]))">Antonym
                                            terms should occur at the term (termSec) level. The antonym
                                            term in this element must be expressed in
                                            basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_directionality">
                                    <sch:rule context="termNote[@type='directionality']">
                                        <sch:assert
                                            test=". =
                                            'monodirectional' or .='bidirectional' or .='incommensurate'"
                                            >The directionality must be monodirectional, bidirectional,
                                            or incommensurate. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_etymology">
                                    <sch:rule context="termNote[@type='etymology']">
                                        <sch:assert test=".=not(*)">Information about the etymology of a
                                            term must be expressed in noteText. Etymology information
                                            should occur at the termSec level or at the termCompGrp
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_falseFriend">
                                    <sch:rule context="termNote[@type='falseFriend']">
                                        <sch:assert test="(.=not(*[not(local-name()='hi')]))"> The false
                                            friend must be expressed in basicText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_frequency">
                                    <sch:rule context="termNote[@type='frequency']">
                                        <sch:assert
                                            test=". =
                                            'commonlyUsed' or .='infrequentlyUsed' or .='rarelyUsed'"
                                            >The frequency must be commonlyUsed, infrequentlyUsed, or
                                            rarelyUsed. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_geographicalUsage">
                                    <sch:rule context="termNote[@type='geographicalUsage']">
                                        <sch:assert test=".=not(*)">The geographical usage must be
                                            expressed in plainText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_grammaticalGender">
                                    <sch:rule context="termNote[@type='grammaticalGender']">
                                        <sch:assert
                                            test="(.='masculine' or .='feminine' or .='neuter' or .='otherGender')"
                                            > The gender must be masculine, feminine, neuter, or
                                            otherGender. Gender should be specified at the term level
                                            (termSec) or at the termCompGrp level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_grammaticalNumber">
                                    <sch:rule context="termNote[@type='grammaticalNumber']">
                                        <sch:assert
                                            test=". =
                                            'single' or .='plural' or .='dual' or .='mass' or .='otherNumber'"
                                            >The grammatical number must be single, plural, dual, mass,
                                            or otherNumber. The grammatical number should be specified
                                            at the term level (termSec) or at the termCompGrp
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_grammaticalValency">
                                    <sch:rule context="termNote[@type='grammaticalValency']">
                                        <sch:assert test=".=not(*)"> The grammatical valency must be
                                            expressed in plainText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_homograph">
                                    <sch:rule context="termNote[@type='homograph']">
                                        <sch:assert test=".=not(*[not(local-name()='hi')])"> The
                                            homograph must be expressed in basicText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_language-planningQualifier">
                                    <sch:rule context="termNote[@type='language-planningQualifier']">
                                        <sch:assert
                                            test=". =
                                            'recommendedTerm' or .='nonstandardizedTerm' or .='proposedTerm' or .='newTerm'"
                                            >The language planning qualifier must be recommendedTerm,
                                            nonstandardizedTerm, proposedTerm, or newTerm. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_lionHotkey">
                                    <sch:rule context="termNote[@type='lionHotkey']">
                                        <sch:assert test=".=not(*)">The hotkey must be expressed in
                                            plainText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_normativeAuthorization">
                                    <sch:rule context="termNote[@type='normativeAuthorization']">
                                        <sch:assert
                                            test=". =
                                            'standardizedTerm' or .='preferredTerm' or .='admittedTerm' or .='deprecatedTerm' or .='supersededTerm' or .='legalTerm' or .='regulatedTerm'"
                                            >The normative authorization must be standardizedTerm,
                                            preferredTerm, admittedTerm, deprecatedTerm, supersededTerm,
                                            legalTerm, regulatedTerm . </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_partOfSpeech">
                                    <!-- the following rule is for TBX-Basic
						<sch:rule context="termNote[@type='partOfSpeech']">
						<sch:assert
						test=". = 'noun' or .='verb' or .='adjective' or .='adverb' or .='properNoun' or .='other'"
						>The part of speech must be either noun, verb,
						adjective, adverb, properNoun, or other. </sch:assert>
						</sch:rule> -->
                                    <sch:rule context="termNote[@type='partOfSpeech']">
                                        <sch:assert test=".=not(*)">The part of speech must be a
                                            plainText value. It should be specified only at the term
                                            (termSec) level or at the termCompGrp level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_processStatus">
                                    <sch:rule context="termNote[@type='processStatus']">
                                        <sch:assert
                                            test=". =
                                            'unprocessed' or .='provisionallyProcessed' or .='finalized'"
                                            >The process status must be unprocessed,
                                            provisionallyProcessed, or finalized. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_pronunciation">
                                    <sch:rule context="termNote[@type='pronunciation']">
                                        <sch:assert test=".=not(*[not(local-name()='hi')])">The
                                            pronunciation must be expressed in basicText. It should be
                                            specified at the term (termSec) level or at the termCompGrp
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_proprietaryRestriction">
                                    <sch:rule context="termNote[@type='proprietaryRestriction']">
                                        <sch:assert
                                            test=". =
                                            'trademark' or .='serviceMark' or .='tradeName'"
                                            >The proprietary restriction must be trademark, serviceMark,
                                            or tradeName. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_register">
                                    <sch:rule context="termNote[@type='register']">
                                        <sch:assert
                                            test=". =
                                            'colloquialRegister' or .='neutralRegister' or .='technicalRegister' or .='in-houseRegister' or .='bench-levelRegister' or .='slangRegister' or .='vulgarRegister'"
                                            >The register must be colloquialRegister, neutralRegister,
                                            technicalRegister, in-houseRegister, bench-levelRegister,
                                            slangRegister, or vulgarRegister . </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_shortFormFor">
                                    <sch:rule context="termNote[@type='shortFormFor']">
                                        <sch:assert test=".=not(*[not(local-name()='hi')])"> The value
                                            of the short form in this element must be expressed in
                                            basicText.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_temporalQualifier">
                                    <sch:rule context="termNote[@type='temporalQualifier']">
                                        <sch:assert
                                            test=". =
                                            'archaicTerm' or .='outdatedTerm' or .='obsoleteTerm'"
                                            >The temporal qualifier must be archaicTerm, outdatedTerm,
                                            or obsoleteTerm. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_termLocation">
                                    <sch:rule context="termNote[@type='termLocation']">
                                        <sch:assert test=".=not(*)">The termLocation must be a plainText
                                            value. It should be specified only at the term (termSec)
                                            level.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_termProvenance">
                                    <sch:rule context="termNote[@type='termProvenance']">
                                        <sch:assert
                                            test=". =
                                            'transdisciplinaryBorrowing' or .='translingualBorrowing' or .='loanTranslation' or .='neologism'"
                                            >The term provenance must be transdisciplinaryBorrowing,
                                            translingualBorrowing, loanTranslation, or
                                            neologism.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_termType">
                                    <sch:rule context="termNote[@type='termType']">
                                        <sch:assert
                                            test=". = 'abbreviation' or .='initialism' or .='acronym' or .='clippedTerm' or .='entryTerm' or .='synonym' or .='internationalScientificTerm' or .='fullForm' or .='transcribedForm' or .='symbol' or .='formula' or .='equation' or .='logicalExpression' or .='commonName' or .='variant' or .='shortForm' or .='transliteratedForm' or .='sku' or .='partNumber' or .='phraseologicalUnit' or .='synonymousPhrase' or .='standardText' or .='string' or .='internationalism' or .='shortcut'"
                                            >The type of term can only be one of the following values:
                                            abbreviation, initialism, acronym, clippedTerm, entryTerm,
                                            synonym, internationalScientificTerm, fullForm,
                                            transcribedForm, symbol, formula, equation,
                                            logicalExpression, commonName, variant, shortForm,
                                            transliteratedForm, sku, partNumber, phraseologicalUnit,
                                            synonymousPhrase, standardText, string, internationalism,
                                            shortcut.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_termStructure">
                                    <sch:rule context="termNote[@type='termStructure']">
                                        <sch:assert test=".=not(*)"> The term structure must be
                                            expressed in plain text.</sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                                <sch:pattern name="termNote_timeRestriction">
                                    <sch:rule context="termNote[@type='timeRestriction']">
                                        <sch:assert test=".=not(*)"> The time restriction must be
                                            expressed in plainText. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the data-category type of the <gi>termNote</gi>,
                                    such as <val>partOfSpeech</val> or <val>termType</val>.</desc>
                                <valList type="closed">

                                    <valItem ident="abbreviatedFormFor">
                                        <gloss>abbreviatedFormFor</gloss>
                                        <desc>A link used to identify a relation between a term that
                                            is an abbreviated form, and its full or expanded form.
                                            It may be coupled with a <att>target</att> attribute to
                                            point to the entry of the full or expanded form. For
                                            example, the term <term>WWW</term> could have the
                                            following tag to point to its full form: <tag>termNote
                                                type="abbreviatedFormFor"
                                                target="tid-worldwideweb"</tag>World Wide
                                                Web<tag>/termNote</tag>. The actual content of the
                                            element would be the text <term>World Wide Web</term>,
                                            which allows the user to see what term is the full form
                                            of the current term without having to go to the location
                                            of the full form in the file (the location would
                                            normally be somewhere within the current entry, since
                                            the abbreviated form and the full form represent the
                                            same concept). The element content shall be expressed in
                                            basicText. The identification of a relation between an
                                            abbreviated term and its full form indicates which term
                                            in a terminological entry is the full form of the
                                            abbreviated term.
                                            <!-- kara - did not include the following because I think even when
										English abbreviations are used in other languages, they are duplicated in the non-English lang section... "Ordinarily, both terms will appear in the
										same language section, although this is not mandatory." -->In
                                            many languages, English abbreviations are commonly used,
                                            but the English full form may be avoided in favor of an
                                            equivalent full form in the language in question. In
                                            this case, the English abbreviation and the target
                                            language full form will both appear in the target
                                            language section of the entry.</desc>

                                    </valItem>
                                    <valItem ident="administrativeStatus">
                                        <gloss>administrativeStatus</gloss>

                                        <desc>The status of a term within a certain working
                                            environment. The data-category
                                                <val>administrativeStatus</val> should be linked,
                                            through a <att>target</att> attribute, to a
                                                <gi>refObject</gi> in the back matter that
                                            identifies the administrative organization that
                                            determined the status. The element <gi>termNote</gi>
                                            when its <att>type</att> attribute has the value
                                                <val>administrativeStatus</val> shall contain one of
                                            the following values:<list>
                                                <item>admittedTerm-admn-sts</item>
                                                <item>deprecatedTerm-admn-sts</item>
                                                <item>legalTerm-admn-sts</item>
                                                <item>preferredTerm-admn-sts</item>
                                                <item>regulatedTerm-admn-sts</item>
                                                <item>standardizedTerm-admn-sts</item>
                                                <item>supersededTerm-admn-sts</item>
                                            </list>
                                            <desc>The status of terms with respect to a
                                                standardization process is covered by
                                                  <val>normativeAuthorization</val>. </desc></desc>
                                    </valItem>
                                    <valItem ident="animacy">
                                        <gloss>animacy</gloss>

                                        <desc>The characteristic of a word indicating that in a
                                            given discourse community, its referent is considered to
                                            be alive or to possess a quality of volition or
                                            consciousness. The value of the <gi>termNote</gi>
                                            element when it has a <att>type</att> attribute value of
                                                <val>animacy</val> shall be one of:
                                                <val>animate</val>, <val>inanimate</val>,
                                                <val>otherAnimacy</val>.</desc>
                                    </valItem>
                                    <valItem ident="antonymTerm">
                                        <gloss>antonymTerm</gloss>
                                        <desc>A term that designates a concept that is opposite in
                                            meaning to the concept being described in the current
                                            entry. A <gi>termNote</gi> element that has a
                                                <att>type</att> attribute value of
                                                <val>antonymTerm</val> can also have a
                                                <att>target</att> attribute pointing to the term ID
                                            of the term that represents the antonym concept. The
                                            display term in the content of this element shall be
                                            expressed in basicText.</desc>
                                        <!-- kara : tbx comment not included -->
                                        <desc/>
                                    </valItem>
                                    <valItem ident="directionality">
                                        <gloss>directionality</gloss>
                                        <desc>A data-category that, through the value of its target
                                            attribute, indicates the preferred translation of the
                                            term in the <gi>term</gi> element of the current
                                                <gi>termSec</gi> from among the available
                                            translations in the entry. The <att>target</att>
                                            attribute should point to the identifier of the
                                                <gi>termSec</gi> corresponding to the target term.
                                            In the case of the values <val>monodirectional</val> and
                                                <val>bidirectional</val>, the target term is the
                                            preferred translation. The content of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>directionality</val> indicates the scope of
                                            directionality, and shall be one of the following:<list>
                                                <item><val>monodirectional</val>: The translation is
                                                  only preferred going from the source language
                                                  (current <gi>termSec</gi> to the target language
                                                  (target <gi>termSec</gi>).</item>

                                                <item><val>bidirectional</val>: The translation is
                                                  preferred in both directions, i.e. the term in the
                                                  target <gi>termSec</gi> is a preferred translation
                                                  of the term in the current <gi>termSec</gi> and
                                                  vice-versa.</item>

                                                <item><val>incommensurate</val>: The relation
                                                  between the term in the current <gi>termSec</gi>
                                                  and the term in the target <gi>termSec</gi> as
                                                  translations is imperfect and should be used with
                                                  care. In this case, the concepts are not equal. A
                                                  <tag>termNote type="transferComment"</tag> should
                                                  be used to provide information about the
                                                  difference between the concepts.</item>

                                                <item><val>undetermined</val>: The scope of
                                                  directionality has not been determined.</item>

                                            </list></desc>
                                    </valItem>
                                    <valItem ident="etymology">
                                        <gloss>etymology</gloss>

                                        <desc>Information on the origin of a word and the
                                            development of its meaning. The element content shall be
                                            expressed in noteText. </desc>
                                    </valItem>
                                    <valItem ident="falseFriend">
                                        <gloss>falseFriend</gloss>

                                        <desc>A term in another language that appears to be
                                            semantically or morphologically similar to the subject
                                            term in the entry, but that does not represent the same
                                            concept. For example, in French, the term
                                                <term>réaliser</term> means "to accomplish", and
                                            therefore, it is a false friend of the English term
                                                <term>realize</term> (i.e. to become conscious of).
                                            A <gi>termNote</gi> element with the <att>type</att>
                                            attribute value of <val>falseFriend</val> can also have
                                            a <att>target</att> attribute whose value is a pointer
                                            to a term in another entry. The element content shall be
                                            expressed in basicText.</desc>
                                    </valItem>
                                    <valItem ident="frequency">
                                        <gloss>frequency</gloss>

                                        <desc>The relative commonness with which a term occurs. The
                                            content of the <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>frequency</val> shall be one of:
                                                <val>commonlyUsed</val>,
                                            <val>infrequentlyUsed</val>, <val>rarelyUsed</val>. The
                                            assessment of frequency of a term can be based on
                                            subjective criteria, or it can reflect computer analysis
                                            of text corpora.</desc>
                                    </valItem>
                                    <valItem ident="geographicalUsage">
                                        <gloss>geographicalUsage</gloss>

                                        <!--kara: this currently allows noteText but couldn't we use an ISO code?? -->
                                        <desc>A code identifying any specific geographical area
                                            where the term is used, for instance, to differentiate
                                            between UK English and US English. Preferred values are
                                            language codes combined with geographical codes, from
                                            IETF RFC 4646 or its successor, as identified in IETF
                                            BCP 47. For example: en-US for American English. The
                                            element content shall be expressed in plainText. </desc>
                                    </valItem>
                                    <valItem ident="grammaticalGender">
                                        <gloss>grammaticalGender</gloss>
                                        <desc>The gender of the word. The value of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>grammaticalGender</val> shall be one of:
                                                <val>masculine</val>, <val>feminine</val>,
                                                <val>neuter</val>, or <val>otherGender</val>.</desc>
                                    </valItem>
                                    <valItem ident="grammaticalNumber">
                                        <gloss>grammaticalNumber</gloss>
                                        <desc>A property of a term that indicates the number of
                                            objects referred to by the term. The content of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>grammaticalNumber</val> shall be one of:
                                                <val>singular</val>, <val>plural</val>,
                                                <val>dual</val>, <val>mass</val>, or
                                                <val>otherNumber</val>. For example, the terms
                                                <term>rice</term> and <term>bread</term> are mass
                                            nouns because there are no separate singular and plural
                                            forms. <desc>If the singular and the plural forms of a
                                                term do not designate the same concept, they should
                                                be recorded in separate entries.</desc></desc>
                                    </valItem>
                                    <valItem ident="grammaticalValency">
                                        <gloss>grammaticalValency</gloss>

                                        <desc>The range of syntactic elements either required or
                                            permitted by a lexical unit. The valency of
                                                <term>eat</term> includes a subject ("I" in "I am
                                            eating") and an object ("cheese" in "I am eating
                                            cheese".) It can thus be said to be "bivalent". The
                                            element content shall be expressed in plainText.
                                            <!-- kara - this example suggests a picklist would be appropriate for the content --></desc>
                                    </valItem>
                                    <valItem ident="homograph">
                                        <gloss>homograph</gloss>

                                        <desc>A word that is spelled like the subject term in the
                                            entry, but that has a different meaning, and origin.
                                            Homographs are terms that have the same written form,
                                            but are derived from different etymological origins, for
                                            example, a <term>port</term> for boats and a
                                                <term>port</term> for computer peripherals. A
                                                <gi>termNote</gi> element having a <att>type</att>
                                            attribute value of <val>homograph</val> can also have a
                                                <att>target</att> attribute to point to the
                                                <gi>termSec</gi> of the entry that describes the
                                            homograph. The element content shall be expressed in
                                            basicText.</desc>
                                    </valItem>
                                    <valItem ident="language-planningQualifier">
                                        <gloss>language-planningQualifier</gloss>

                                        <desc>A qualifier assigned to a provisional term within a
                                            language planning or descriptive terminology
                                            environment. The content of the <gi>termNote</gi>
                                            element when it has a <att>type</att> attribute value of
                                                <val>language-planningQualifier</val> shall be one
                                            of: <val>recommendedTerm</val>,
                                                <val>nonstandardizedTerm</val>,
                                                <val>proposedTerm</val>, or
                                            <val>newTerm</val>.</desc>
                                        <!-- kara - comment from TBX not usable, so omitted -->
                                    </valItem>
                                    <valItem ident="lionHotkey">
                                        <gloss>lionHotkey</gloss>
                                        <desc>The letter in a word that acts as a hotkey in a
                                            computer application. A hotkey is a key or a combination
                                            of keys <!-- how can it be more than one key -->on a
                                            computer keyboard that, when pressed at one time,
                                            performs a task (such as starting an application) as an
                                            alternative to using a mouse or other input device.
                                            Hotkeys are supported by many operating systems and
                                            applications. The hotkey is indicated by an ampersand in
                                            the term in software interface files, and by an
                                            underscore in the actual visual display. The element
                                            content shall be expressed in plainText. </desc>
                                    </valItem>
                                    <valItem ident="normativeAuthorization">
                                        <gloss>normativeAuthorization</gloss>

                                        <desc>A term status qualifier assigned by an authoritative
                                            body, such as a standards body or a governmental entity
                                            with a regulatory function. The content of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>normativeAuthorization</val> shall be one of:<list>
                                                <item>standardizedTerm</item>
                                                <item>preferredTerm</item>
                                                <item>admittedTerm</item>
                                                <item>deprecatedTerm</item>
                                                <item>supersededTerm</item>
                                                <item>legalTerm</item>
                                                <item>regulatedTerm</item>
                                            </list> The name of the authoritative body should be
                                            documented in the terminology repository, and referenced
                                            in the TBX document instance by using a
                                                <gi>refObject</gi>. </desc>
                                    </valItem>
                                    <valItem ident="partOfSpeech">
                                        <gloss>partOfSpeech</gloss>
                                        <desc>A category assigned to a word based on its grammatical
                                            and semantic properties. For example: <val>noun</val>,
                                                <val>verb</val>, or <val>adjective</val>. The
                                            element content shall be expressed in plainText, and
                                            preferably be limited to a set of picklist values. Only
                                            one value shall be permitted for each <gi>term</gi> in a
                                            given entry. For example, the following values are
                                            permitted in the <emph>TBX-Basic</emph> TML:<list>
                                                <item>noun</item>
                                                <item>verb</item>
                                                <item>adjective</item>
                                                <item>adverb</item>
                                                <item>properNoun</item>
                                                <item>other</item>
                                            </list></desc>
                                    </valItem>
                                    <valItem ident="processStatus">
                                        <gloss>processStatus</gloss>

                                        <desc>The status of a term with respect to its advancement
                                            within the <!--standardization --> terminology
                                            management process. The content of the <gi>termNote</gi>
                                            element when it has a <att>type</att> attribute value of
                                                <val>processStatus</val> shall be one of:
                                                <val>unprocessed</val>,
                                                <val>provisionallyProcessed</val>, or
                                                <val>finalized</val>.</desc>
                                    </valItem>
                                    <valItem ident="pronunciation">
                                        <gloss>pronunciation</gloss>

                                        <desc>The representation of the manner by which a term is
                                            spoken. In TBX, pronunciation shall be represented in
                                            the International Phonetic Alphabet. A given term can
                                            have more than one pronunciation depending on the
                                            geographical area in which the term is used. A given
                                            term can have more than one pronunciation depending on
                                            the geographical area in which the term is used. In this
                                            case use a separate <gi>termSec</gi> element for each
                                            pronunciation, and indicate the gegraphical area of each
                                            by using a <gi>termNote</gi> element with a
                                                <att>type</att> attribute value of
                                                <val>geographicalUsage</val>. The element content
                                            shall be expressed in basicText.</desc>
                                    </valItem>

                                    <valItem ident="proprietaryRestriction">
                                        <gloss>proprietaryRestriction</gloss>

                                        <desc>A restriction placed on a term for the purpose of
                                            protecting the right of an organization to the exclusive
                                            use of the term. The content of the <gi>termNote</gi>
                                            element when it has a <att>type</att> attribute value of
                                                <val>proprietaryRestriction</val> shall be one of:
                                                <val>trademark</val>, <val>serviceMark</val> or
                                                <val>tradeName</val>. <desc>The content value
                                                "copyright" is not included because copyright only
                                                applies to larger text units, such as books, not to
                                                terms.</desc></desc>
                                    </valItem>
                                    <valItem ident="register">
                                        <gloss>register</gloss>

                                        <desc>Classification indicating the level of language
                                            assigned to a term. The content of the <gi>termNote</gi>
                                            element when it has a <att>type</att> attribute value of
                                                <val>register</val> shall be one of: <list>
                                                <item>colloquialRegister</item>
                                                <item>neutralRegister</item>
                                                <item>technicalRegister</item>
                                                <item>in-houseRegister</item>
                                                <item>bench-levelRegister</item>
                                                <item>slangRegister</item>
                                                <item>vulgarRegister</item>
                                            </list>
                                            <!-- In some regions and
										terminology management environments (for instance, family-planning
										medicine), the categorization of terms according to register can be
										critical. --></desc>
                                    </valItem>
                                    <valItem ident="shortFormFor">
                                        <gloss>shortFormFor</gloss>
                                        <desc>A linking element used to identify a relation between
                                            the subject term when it is a short form, and its full
                                            or expanded form. It may be coupled with a
                                                <att>target</att> attribute to point to the full or
                                            expanded form. Normally both the short form and the full
                                            form will be contained in the same entry, but each in
                                            its own <gi>termSec</gi>, because they represent the
                                            same concept. For example, the term <term>United
                                                States</term> could have the following markup to
                                            point to the full form term <term>United States of
                                                America</term>: <tag>termNote type="shortFormFor"
                                                target="tid-unitedstatesofamerica</tag>United States
                                            of America<tag>/termNote</tag>. The content of the
                                            element would be the target term, expressed in
                                            basicText, which allows the user to see the target term
                                            without going to its location in the entry. The
                                            identification of a relation between a short form and
                                            its full form indicates which term in a terminological
                                            entry is the full form of the short form.
                                            <!-- kara - did not include the following because I think even when
										English abbreviations are used in other languages, they are duplicated in the non-English lang section... "Ordinarily, both terms will appear in the
										same language section, although this is not mandatory." --><!-- Kara: I don't believe the following is commonplace for short forms --><!-- In
										many languages, English short forms are commonly used, but the English
										full form may be avoided in favor of an equivalent full form in the
										language in question. In this case, the English short form and the
										target language full form will both appear in the target language
										section of the entry. --></desc>

                                    </valItem>
                                    <valItem ident="temporalQualifier">
                                        <gloss>temporalQualifier</gloss>

                                        <desc>A property of a term with respect to its use over
                                            time. The content of the <gi>termNote</gi> element when
                                            it has a <att>type</att> attribute value of
                                                <val>temporalQualifier</val> shall be one of:
                                                <val>archaicTerm</val>, <val>outdatedTerm</val>,
                                                <val>obsoleteTerm</val>.</desc>
                                    </valItem>
                                    <valItem ident="termLocation">
                                        <gloss>termLocation</gloss>

                                        <desc>A location in a document, computer file, or other
                                            information medium, where the term frequently occurs,
                                            such as a user interface object (in software), a
                                            packaging element, a component in an industrial process,
                                            and so forth. The element content shall be expressed in
                                            plainText, and preferably be restricted to a set of
                                            picklist values. The following picklist values are
                                            recommended for software user interface locations in a
                                            Windows environment. <list>
                                                <item>checkBox</item>
                                                <item>comboBox</item>
                                                <item>comboBoxElement</item>
                                                <item>dialogBox</item>
                                                <item>groupBox</item>
                                                <item>informativeMessage</item>
                                                <item>interactiveMessage</item>
                                                <item>menuItem</item>
                                                <item>progressBar</item>
                                                <item>pushButton</item>
                                                <item>radioButton</item>
                                                <item>slider</item>
                                                <item>spinBox</item>
                                                <item>tab</item>
                                                <item>tableText</item>
                                                <item>textBox</item>
                                                <item>toolTip</item>
                                                <item>user-definedType</item>
                                            </list>
                                        </desc>
                                    </valItem>

                                    <valItem ident="termProvenance">
                                        <gloss>termProvenance</gloss>

                                        <desc>Classification of a term according to the methodology
                                            employed in creating the term. The content of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>termProvenance</val> shall be one of:
                                                <val>transdisciplinaryBorrowing</val>,
                                                <val>translingualBorrowing</val>,
                                                <val>loanTranslation</val>, or
                                            <val>neologism</val>.</desc>
                                    </valItem>
                                    <valItem ident="termStructure">
                                        <gloss>termStructure</gloss>
                                        <desc>The structure of the components of a term, indicated
                                            using square brackets. For example, e.g. : [bank
                                            statement] [total] versus [bank] [statement total]. The
                                            element content shall be expressed in plainText.
                                            <!-- kara - I think we need a better example of this... the difference between the two isn't evident to me. --></desc>
                                    </valItem>
                                    <valItem ident="termType">
                                        <gloss>termType</gloss>
                                        <desc>A categorization of a term with respect to formal
                                            representations of terms or where or how they are used,
                                            for example, <val>acronym</val>. The content of the
                                                <gi>termNote</gi> element when it has a
                                                <att>type</att> attribute value of
                                                <val>termType</val> shall be one of the following:<list>
                                                <item>abbreviation</item>
                                                <item>acronym</item>
                                                <item>clippedTerm</item>
                                                <item>commonName</item>
                                                <item>entryTerm</item>
                                                <item>equation</item>
                                                <item>formula</item>
                                                <item>fullForm</item>
                                                <item>initialism</item>
                                                <item>internationalism</item>
                                                <item>internationalScientificTerm</item>
                                                <item>logicalExpression</item>
                                                <item>partNumber</item>
                                                <item>phraseologicalUnit</item>
                                                <item>transcribedForm</item>
                                                <item>transliteratedForm</item>
                                                <item>shortForm</item>
                                                <item>shortcut</item>
                                                <item>sku</item>
                                                <item>standardText</item>
                                                <item>string</item>
                                                <item>symbol</item>
                                                <item>synonym</item>
                                                <item>synonymousPhrase</item>
                                                <item>variant</item>
                                            </list>Refer to ISO 12620 for definitions of the above
                                            term types. The value <val>shortcut</val> refers to a
                                            string that acts as a keyboard shortcut on computers,
                                            for example, <emph>Ctrl + V</emph> is a term that
                                            represents a keyboard shortcut for the concept of
                                                <emph>paste</emph>.</desc>
                                    </valItem>

                                    <valItem ident="timeRestriction">
                                        <gloss>timeRestriction</gloss>

                                        <desc>The indication of a period of time during or since
                                            which a term was or has been subject to specified usage.
                                            For example, several European countries have redefined
                                            the requirements for certain university degrees in
                                            recent years. If, for instance, the requirements for a
                                            baccalaureate degree changed from three to four years in
                                            1993, then any terminology entry defining the term used
                                            to designate this degree would have to specify the time
                                            restriction affecting the definition, which would be
                                            different before 1993 and after 1993. The element
                                            content shall be expressed in plainText. </desc>
                                    </valItem>
                                    <valItem ident="transferComment">
                                        <gloss>transferComment</gloss>

                                        <desc>Note included in a term entry providing information on
                                            the degree of equivalence, directionality or other
                                            special features affecting equivalence between a term in
                                            one language and another term in a second language. This
                                            element can be used in conjunction with the
                                                <tag>termNote type="directionality"</tag> element to
                                            indicate the preferred translation of the term in
                                            question. The <gi>termNote</gi> element with a
                                                <att>type</att> attribute value of
                                                <val>transferComment</val> can also have a
                                                <att>target</att> attribute to point to the term
                                            that is the object of the transfer comment.</desc>
                                    </valItem>

                                    <valItem ident="usageNote">
                                        <gloss>usageNote</gloss>
                                        <desc>A note containing information on the usage of the
                                            term.</desc>
                                    </valItem>
                                </valList>
                            </attDef>



                        </attList>

                        <exemplum>
                            <eg><![CDATA[ <termNote type="termType">picklist</termNote> ]]></eg>
                        </exemplum>
                    </elementSpec>
                    <elementSpec ident="termNoteGrp">
                        <desc>A grouping element that contains one <gi>termNote</gi> element, and
                                <ref target="#entity.noteLinkInfo">auxiliary information</ref> such
                            as administrative information, transaction information, notes and cross
                            references. It does not allow any <gi>descrip</gi> elements. It can only
                            appear at the term (termSec) level and below.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="termNote"/>
                            <elementRef key="entity.noteLinkInfo"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="termSec">
                        <desc>A <emph>term information group</emph>. A grouping element that
                            contains child elements describing a term. It is often referred to as
                            the <emph>term section</emph>.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="term"/>
                            
                                <elementRef key="termNote" minOccurs="0" maxOccurs="unbounded"/>
                            
                            <elementRef key="entity.auxInfo"/>
                            
                                <elementRef key="termCompSec" minOccurs="0" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="transac">
                        <desc>A record that indicates the stage of the entry within the overal
                            process of creation, approval, and use of a terminology entry. Currently
                            this element is only used to specify the type of transaction, and
                            therefore only one value is currently specified for the <att>type</att>
                            attribute. However, additional <att>type</att> attribute values can be
                            defined for additional purposes in a user-specific XCS file.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>

                        </classes>
                        <content>
                            <textNode/>
                        </content>
                        <constraintSpec ident="transac" scheme="schematron">
                            <constraint>
                                <sch:pattern name="transac_transactionType">
                                    <sch:rule context="transac[@type='transactionType']">
                                        <sch:assert
                                            test=". =
                                            'origination' or .='input' or .='modification' or .='check' or .='approval' or 
                                            .='withdrawl' or .='standardization' or .='exportation' or .='importation' or .='proposal' or .='userAccess'"
                                            >The content of this element indicates the type of
                                            transaction and must be one of the following values:
                                            origination, input, modification, check, approval,
                                            withdrawal, standardization, exportation, importation,
                                            proposal, userAccess. </sch:assert>
                                    </sch:rule>
                                </sch:pattern>
                            </constraint>
                        </constraintSpec>
                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>The attribute value <val>transactionType</val> ensures that
                                    the content of the <gi>transac</gi> element will be a
                                    transaction type.</desc>
                                <valList type="closed">
                                    <valItem ident="transactionType">
                                        <gloss>transactionType</gloss>
                                        <desc>A record that indicates the stage of the entry within
                                            the overall process of creation, approval, and use of a
                                            terminology entry.</desc>
                                    </valItem>
                                </valList>
                            </attDef>

                        </attList>
                    </elementSpec>
                    <elementSpec ident="transacGrp">
                        <desc>An element that includes child elements that provide information about
                            a transaction. </desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="transac"/>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="transacNote"/>
                                    <elementRef key="date"/>
                                    <elementRef key="note"/>
                                    <elementRef key="ref"/>
                                    <elementRef key="xref"/>
                                </alternate>
                        </content>
                    </elementSpec>
                    <elementSpec ident="transacNote">
                        <desc>Information about a transaction, such as the name of the person who
                            performed the transaction. The content of this element shall be
                            plainText.</desc>
                        <classes>
                            <memberOf key="IDLangTgtDtyp"/>
                        </classes>

                        <content>
                            <textNode/>
                            <!-- kara, Feb 4, 2008 - confirming with Alan that the levels for transacNote are already accurately expressed in the DTD constraints so
					the  following additional schematron rule is not required 
				<sch:pattern name="transacNote_responsibility">
					<sch:rule context="transacNote[@type='responsibility']">
						<sch:assert test="parent::termSec|parent::termCompGrp">Information about the
							person responsible for a terminology transaction can occur at the term
							(tig) level or at the termCompGrp level. </sch:assert>
					</sch:rule>
				</sch:pattern> -->
                        </content>
                        <attList>
                            <attDef ident="type" usage="req">
                                <valList type="closed">
                                    <valItem ident="usageCount">
                                        <gloss>usageCount</gloss>
                                        <desc>The number of times an entry has been accessed.</desc>
                                    </valItem>
                                    <valItem ident="responsibility">
                                        <gloss>responsibility</gloss>
                                        <desc>The name of a person or entity associated with a
                                            terminology management transaction. The
                                                <gi>transacNote</gi> element with a <att>type</att>
                                            attribute value of <val>responsibility</val> can also
                                            have a <att>target</att> attribute to point to the
                                            identifier of a bibliographic entry in a
                                                <gi>refObject</gi> that contains information about
                                            the person or entity.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>

                    </elementSpec>
                    <elementSpec ident="xref">
                        <desc>A linking element that points to an external object using a URI (a URL
                            or other Web address). The target attribute is required. The content of
                            the element is display text representing the target object, such as a
                            title, file name, or short description. </desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <textNode/>
                        </content>

                        <attList>
                            <attDef ident="target" usage="req">
                                <desc>The URI of the external object.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>
                                <remarks>
                                    <p>Unlike the target attributes on most TBX elements, which
                                        point to other elements in the TBX XML document instance
                                        (hence, they have an IDREF datatype), the target attribute
                                        of an <gi>xref</gi> element points outside the TBX document,
                                        presumably to objects identified by URIs. Therefore, the
                                        datatype of the <att>target</att> attribute for an
                                            <gi>xref</gi> element is specified as CDATA.</p>
                                </remarks>
                            </attDef>
                            <attDef ident="type" usage="opt">
                                <valList type="closed">
                                    <valItem ident="corpusTrace">
                                        <gloss>corpusTrace</gloss>
                                        <desc>A notation indicating the location of an external
                                            contextual resource.</desc>
                                    </valItem>

                                    <valItem ident="externalCrossReference">
                                        <gloss>externalCrossReference</gloss>
                                        <desc>A term or other terminological resource that is
                                            external to the terminological database or TBX document
                                            instance.</desc>
                                    </valItem>
                                    <valItem ident="xGraphic">
                                        <gloss>xGraphic</gloss>
                                        <desc>External graphic file.</desc>

                                    </valItem>
                                    <valItem ident="xAudio">
                                        <gloss>xAudio</gloss>
                                        <desc>External audio file.</desc>

                                    </valItem>
                                    <valItem ident="xVideo">
                                        <gloss>xVideo</gloss>
                                        <desc>External video file</desc>

                                    </valItem>
                                    <valItem ident="xSource">
                                        <gloss>xSource</gloss>
                                        <desc>An external source of information such as the source
                                            of a definition or context sentence.</desc>
                                    </valItem>
                                    <valItem ident="xMathML">
                                        <gloss>xMathML</gloss>
                                        <desc>A mathematical concept expressed in MathML.</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>



                    </elementSpec>
                </specGrp>


                <specGrp xml:id="spec-other-elements">
                    <!-- in hierarchical order -->
                    <elementSpec ident="tbx">
                        <desc>The root element of a TBX document instance.</desc>

                        <content>
                            <elementRef key="tbxHeader"/>
                            <elementRef key="text"/>
                        </content>
                        <attList>
                            <attDef ident="type" usage="req">
                                <desc>Indicates the type of tbx document. If the <att>type</att>
                                    attribute value <val>TBX</val> is used, then the TBX document
                                    instance shall adhere to the default XCS file. If the TBX
                                    document instance adheres to another XCS file, then the
                                        <att>type</att> attribute value can consist of
                                        <val>TBX-</val> plus another word associated with the XCS
                                    file, such as 'TBX-Basic'.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                            <attDef ident="style" usage="req">
                                <desc>Indicates the style of tbx document, whether it is Data
                                    Category as Tag (DCT) or Data Category as Attribute (DCA). The
                                    allowed values are either 'dca' or 'dct'.</desc>
                                <valList type="closed">
                                    <valItem ident="dca">
                                        <desc>Data Category as Attribute</desc>
                                    </valItem>
                                    <valItem ident="dct">
                                        <desc>Data Category as Tag</desc>
                                    </valItem>
                                </valList>
                            </attDef>
                            <attDef ident="xml:lang" usage="req">
                                <desc>Indicates the default language of the entire <gi>tbx</gi>
                                    element content. The allowed values of the <att>xml:lang</att>
                                    attribute are found in IETF RFC 4646 or its successor, as
                                    indicated in IETF BCP 47. This attribute is required for the
                                        <gi>tbx</gi> element.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>
                                <remarks>
                                    <p>The value of the xml:lang attribute inherits downward through
                                        the XML document unless overridden by another
                                            <att>xml:lang</att> attribute. </p>
                                    <p> The language specified in the <gi>tbx</gi> element becomes
                                        the working language of the entire TBX file. Each
                                            <gi>langSec</gi> element shall also specify a language
                                        that applies to that language section. This becomes the
                                        object language of the language section. Thus, a definition
                                        at the terminological entry level is assumed to be in the
                                        working language of the TBX file unless otherwise specified,
                                        and a note in a language section is assumed to be in the
                                        same language as the terms in that language section unless
                                        otherwise specified. </p>

                                </remarks>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="tbxHeader">
                        <desc>A grouping element that contains child elements which describe the TBX
                            document instance.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="fileDesc"/>
                            
                                <elementRef key="encodingDesc" minOccurs="0" maxOccurs="1"/>
                            
                            
                                <elementRef key="revisionDesc" minOccurs="0" maxOccurs="1"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="p">
                        <desc>Paragraph text that is contained by the <gi>tbxHeader</gi>. By using a
                                <att>type</att> attribute, it can also contain essential information
                            about the content or location of the XCS file.</desc>
                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                        <attList>
                            <attDef ident="type" usage="opt">
                                <!-- the following values are only when p is used in encodingDesc -->
                                <valList type="closed">
                                    <valItem ident="DCSName">
                                        <desc>The name of the XCS file that constrains the content
                                            of the TBX document instance.</desc>
                                    </valItem>
                                    <valItem ident="XCSURI">
                                        <desc>The URI of the XCS file that constrains the content of
                                            the TBX document instance.</desc>
                                    </valItem>
                                    <valItem ident="XCSContent">
                                        <desc>The content of an XCS file, embedded directly in the
                                            TBX document instance. Note that this content cannot be
                                            validated by the TBX DTD and therefore should be removed
                                            from the TBX document instance, or commented out, prior
                                            to such validation. </desc>
                                    </valItem>
                                </valList>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="fileDesc">
                        <desc>A nesting element containing child elements that describe the TBX
                            document instance.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            
                                <elementRef key="titleStmt" minOccurs="0" maxOccurs="1"/>
                            
                            
                                <elementRef key="publicationStmt" minOccurs="0" maxOccurs="1"/>
                            
                            
                                <elementRef key="sourceDesc" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="titleStmt">
                        <desc>A nesting element containing the title and any notes about the TBX
                            document instance.</desc>
                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            <elementRef key="title"/>
                            
                                <elementRef key="note"  minOccurs="0" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="title">
                        <desc>The title of the TBX document instance.</desc>
                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            <textNode/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="publicationStmt">
                        <desc>Any information pertaining to the publication of the TBX document
                            instance.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            
                                <elementRef key="p" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="sourceDesc">
                        <desc>Any information about the source of the TBX document instance.</desc>
                        <classes>
                            <memberOf key="idlang"/>
                        </classes>
                        <content>
                            
                                <elementRef key="p" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="encodingDesc">
                        <desc>Includes a <gi>p</gi> element that itself contains a pointer to the
                            XCS file and, if the TBX file is not in unicode, any information about
                            the encoding.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <!--
				<rng:optional>
					<elementRef key="ude"/>
				</rng:optional> -->
                            
                                <elementRef key="p" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="revisionDesc">
                        <desc>Information about any revisions that have been carried out on the
                            content of the TBX document instance or on the source database from
                            which it is derived.</desc>
                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            
                                <elementRef key="change" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="change">
                        <desc>Information about one particular change event in the revision history
                            of a TBX document instance.</desc>
                        <classes>
                            <memberOf key="idlang"/>

                        </classes>
                        <content>
                            
                                <elementRef key="p" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="text">
                        <desc>The element of a TBX document instance that occurs after the tbx
                            element. This element is provided to maintain compatibility with the
                            TEI.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <!-- removed optional front element -->
                            <elementRef key="body"/>
                            
                                <elementRef key="back" minOccurs="0" maxOccurs="1"/>
                            
                        </content>
                    </elementSpec>
                    <!-- 
			<elementSpec ident="front">
				<desc>Any information suitable for the frontmatter of a TBX document instance.</desc>
				<classes>
					<memberOf key="id"/>
				</classes>
				<content>
					<textNode/>
				</content>
			</elementSpec> -->
                    <elementSpec ident="body">
                        <!-- here put Other Resources, each in a namespace -->
                        <desc>A nesting element that contains terminological entries
                                (<gi>conceptEntry</gi>).</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            
                                <elementRef key="conceptEntry" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="back">
                        <desc>The root element of the back matter of a TBX document instance.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            
                                <elementRef key="refObjectSec" minOccurs="0" maxOccurs="unbounded"/>
                            
                        </content>
                    </elementSpec>
                    <elementSpec ident="refObjectSec">
                        <desc>A list of objects that are referenced in the back matter of a TBX
                            document instance.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            
                                <elementRef key="refObject" minOccurs="1" maxOccurs="unbounded"/>
                            
                        </content>

                        <attList>
                            <attDef ident="type" usage="req">
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>
                    </elementSpec>
                    <elementSpec ident="refObject">
                        <desc>An element in the back matter of a TBX document instance that contains
                            a series of items that describe one referenced object.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <alternate minOccurs="1" maxOccurs="unbounded">
                                    <elementRef key="itemSet"/>
                                    <elementRef key="itemGrp"/>
                                    <elementRef key="item"/>
                                </alternate>
                        </content>
                    </elementSpec>
                    <elementSpec ident="item">
                        <desc>One descriptor of an object in the back matter of a TBX document
                            instance.</desc>
                        <classes>
                            <memberOf key="idtype"/>
                        </classes>
                        <content>
                            <elementRef key="entity.noteText"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="itemGrp">
                        <desc>Contains one <gi>item</gi> element as well as additional child
                            elements for associated administrative information.</desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <content>
                            <elementRef key="item"/>
                            <elementRef key="entity.noteLinkInfo"/>
                        </content>
                    </elementSpec>
                    <elementSpec ident="itemSet">
                        <desc>A list of <gi>item</gi> or <gi>itemGrp</gi>.</desc>
                        <classes>
                            <memberOf key="idtype"/>
                        </classes>
                        <content>
                            <alternate minOccurs="1" maxOccurs="unbounded">
                                    <elementRef key="item"/>
                                    <elementRef key="itemGrp"/>
                                </alternate>
                        </content>
                    </elementSpec>
                </specGrp>


                <specGrp xml:id="spec-macros-entities">
                    <macroSpec ident="entity.basicText">
                        <desc>Basic text is used for terms and term-like elements as well as a few
                            other elements. It allows plainText plus <gi>hi</gi> for some limited
                            embedded markup.</desc>
                        <content>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <textNode/>
                                    <elementRef key="hi"/>
                                </alternate>
                        </content>
                    </macroSpec>

                    <macroSpec ident="entity.noteText">
                        <desc>Note text, which is used in definitions and contextual examples and
                            similar elements, allows more inline markup than basicText.</desc>
                        <content>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <textNode/>
                                    <elementRef key="hi"/>
                                    <elementRef key="foreign"/>
                                    <elementRef key="bpt"/>
                                    <elementRef key="ept"/>
                                    <elementRef key="ph"/>
                                </alternate>
                        </content>
                    </macroSpec>
                    <macroSpec ident="entity.auxInfo">
                        <desc>The auxInfo entity corresponds to information that can be associated
                            with any one of three levels: the terminological entry level
                                (<gi>conceptEntry</gi> (i.e., the concept level), the language level
                                (<gi>langSec</gi>), and the term level (<gi>termSec</gi>).</desc>
                        <content>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="descrip"/>
                                    <elementRef key="descripGrp"/>
                                    <elementRef key="admin"/>
                                    <elementRef key="adminGrp"/>
                                    <elementRef key="transacGrp"/>
                                    <elementRef key="note"/>
                                    <elementRef key="ref"/>
                                    <elementRef key="xref"/>
                                </alternate>
                        </content>
                    </macroSpec>
                    <macroSpec ident="entity.noteLinkInfo">
                        <desc>This entity groups elements for administrative information, notes, and
                            links. It is used by the following grouping elements:
                                <gi>termCompGrp</gi>, <gi>termNoteGrp</gi> and
                            <gi>itemGrp</gi>.</desc>
                        <content>
                            <alternate minOccurs="0" maxOccurs="unbounded">
                                    <elementRef key="admin"/>
                                    <elementRef key="adminGrp"/>
                                    <elementRef key="transacGrp"/>
                                    <elementRef key="note"/>
                                    <elementRef key="ref"/>
                                    <elementRef key="xref"/>
                                </alternate>
                        </content>
                    </macroSpec>



                </specGrp>
                <specGrp xml:id="spec-classes-atts">
                    <classSpec ident="idlang" type="atts">
                        <desc>The idlang attribute class combines the <att>id</att> attribute and
                            the <att>xml:lang</att> attribute. Both are optional for elements that
                            use this attribute class. </desc>
                        <classes>
                            <memberOf key="id"/>
                            <memberOf key="lang"/>
                        </classes>
                    </classSpec>

                    <classSpec ident="idtype" type="atts">
                        <desc>The idtype attribute class combines the <att>id</att> attribute and
                            the <att>type</att> attribute. Both are optional for elements that use
                            this attribute class. </desc>
                        <classes>
                            <memberOf key="id"/>
                        </classes>
                        <attList>

                            <attDef ident="type">
                                <desc>Indicates the type of the meta data-category.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>

                            </attDef>
                        </attList>

                    </classSpec>


                    <classSpec ident="id" type="atts">
                        <desc>The id attribute class corresponds to /elementIdentifier/ in ISO
                            12620. It indicates a unique identifier of an element. Element
                            identifiers can include entry identifiers (eid-...), concept identifiers
                            (cid-...), term identifiers (tid-...), among others. This attribute is
                            optional.</desc>
                        <attList>
                            <attDef ident="id">
                                <datatype>
                                    <dataRef name="ID"/>
                                </datatype>
                            </attDef>
                        </attList>

                    </classSpec>
                    <classSpec ident="target-IDREF" type="atts">
                        <desc>The target-IDREF attribute class corresponds to the <att>target</att>
                            attribute, which is a pointer to another element. The link is
                            established when the value of the <att>target</att> attribute of the
                            source element is the same as the value of the <att>xml:id</att>
                            attribute of the <emph>target</emph> element. When this attribute is
                            used with <gi>termNote</gi>, the target is often another term, such as
                            in the tag <tag>termNote type='abbreviatedFormFor'
                                target='tid-1234'</tag>. It is also available for the data-category
                                <val>transferComment</val> to indicate the term being commented
                            about. The pointer is a unique identifier. The content of elements that
                            take this attribute is typically the display value of the target
                            element, such as the target term. The elements that take this attribute
                            cannot be empty; display content is mandatory. In respect of the
                            principle of term autonomy, any term that is contained by this element
                            should have its own entry in the data collection.</desc>
                        <attList>
                            <attDef ident="target">
                                <datatype>
                                    <dataRef name="IDREF"/>
                                </datatype>
                            </attDef>
                        </attList>
                    </classSpec>

                    <classSpec ident="lang" type="atts">
                        <desc>The lang attribute class corresponds to the attribute
                                <att>xml:lang</att>.</desc>
                        <attList>
                            <attDef ident="xml:lang">
                                <desc>Indicates the language of the element content. The allowed
                                    values are found in IETF RFC 4646 or its successor. This
                                    attribute is optional for elements that use this attribute
                                    class. For a description, see the information at the
                                        <gi>tbx</gi> element.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>
                    </classSpec>


                    <classSpec ident="IDLangTgtDtyp" type="atts">
                        <!-- kara - removed type because this has to be defined with unique values for each meta data-category -->
                        <desc>This attribute class groups together the attributes <att>id</att>,
                                <att>xml:lang</att>, <att>target</att> and
                            <att>datatype</att></desc>
                        <classes>
                            <memberOf key="lang"/>
                            <memberOf key="id"/>
                            <memberOf key="target-IDREF"/>
                        </classes>
                        <attList>
                            <attDef ident="datatype">
                                <desc>The data type of plainText, or what is known as PCDATA.</desc>
                                <datatype>
                                    <textNode/>
                                </datatype>
                            </attDef>
                        </attList>

                    </classSpec>
                    <!-- end of part added by Sebastian -->
                </specGrp>
            </div1>
        </body>
    </text>
</TEI>
